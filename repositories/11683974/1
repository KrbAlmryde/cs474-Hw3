From 273f1edbc133fb2072bafa37fdcc302bef59c7fc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Martin=20Br=C3=A1zdil?= <martin.brazdil@gmail.com>
Date: Thu, 19 Sep 2013 10:16:38 +0200
Subject: [PATCH] add other shop option + fix encoding issue


212	134	.idea/workspace.xml
2	2	Basket/src/main/gen/main/basket/BuildConfig.java
58	50	Basket/src/main/java/main/basket/BaseActivity.java
127	125	Basket/src/main/java/main/basket/BasketActivity.java
145	136	Basket/src/main/java/main/basket/ShopActivity.java
188	180	Basket/src/main/java/main/basket/WeekActivity.java
83	81	Basket/src/main/java/main/basket/dialogs/AddBasketItemDialog.java
42	34	Basket/src/main/java/main/basket/enums/ShopsEnum.java
14	12	Basket/src/main/java/main/basket/helper/DecimalDigitsInputFilter.java
40	38	Basket/src/main/java/main/basket/helper/MainHelper.java
39	37	Basket/src/main/java/main/basket/list/BaseListAdapter.java
28	26	Basket/src/main/java/main/basket/list/ShopEnumListAdapter.java
43	41	Basket/src/main/java/main/basket/list/ShopListAdapter.java
54	52	Basket/src/main/java/main/basket/list/WeekListAdapter.java
29	27	Basket/src/main/java/main/basket/list/structure/BasketListItem.java
76	74	Basket/src/main/java/main/basket/list/structure/CommonListItem.java
38	36	Basket/src/main/java/main/basket/list/structure/ShopListItem.java
25	23	Basket/src/main/java/main/basket/list/structure/StructureWrapper.java
30	28	Basket/src/main/java/main/basket/list/structure/WeekListItem.java
130	129	Basket/src/main/java/main/basket/tools/Connection.java
195	194	Basket/src/main/java/main/basket/tools/FileConnectionTask.java
45	45	Basket/src/main/java/main/basket/tools/Serializer.java
-	-	Basket/src/main/res/drawable-hdpi/other.png
-	-	Basket/src/main/res/drawable-mdpi/other.png
-	-	Basket/src/main/res/drawable-xhdpi/other.png
-	-	Basket/src/main/res/drawable-xxhdpi/other.png
1	0	Basket/src/main/res/values-cs/strings.xml
1	0	Basket/src/main/res/values/strings.xml
 create mode 100644 Basket/src/main/res/drawable-hdpi/other.png
 create mode 100644 Basket/src/main/res/drawable-mdpi/other.png
 create mode 100644 Basket/src/main/res/drawable-xhdpi/other.png
 create mode 100644 Basket/src/main/res/drawable-xxhdpi/other.png

diff --git a/.idea/workspace.xml b/.idea/workspace.xml
index 3e1c339..dd6cda5 100644
--- a/.idea/workspace.xml
+++ b/.idea/workspace.xml
@@ -14,8 +14,27 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="21fa7af9-fafa-4dd2-8b45-8037469ad4f6" name="Default" comment="">
-      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/main.iml" afterPath="$PROJECT_DIR$/Basket/src/main/main.iml" />
-      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/misc.xml" afterPath="$PROJECT_DIR$/.idea/misc.xml" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/dialogs/AddBasketItemDialog.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/dialogs/AddBasketItemDialog.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/BaseActivity.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/BaseActivity.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/BaseListAdapter.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/BaseListAdapter.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/BasketActivity.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/BasketActivity.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/BasketListItem.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/BasketListItem.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/CommonListItem.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/CommonListItem.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/tools/Connection.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/tools/Connection.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/helper/DecimalDigitsInputFilter.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/helper/DecimalDigitsInputFilter.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/tools/FileConnectionTask.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/tools/FileConnectionTask.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/helper/MainHelper.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/helper/MainHelper.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/ShopActivity.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/ShopActivity.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/ShopEnumListAdapter.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/ShopEnumListAdapter.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/ShopListAdapter.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/ShopListAdapter.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/ShopListItem.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/ShopListItem.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/enums/ShopsEnum.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/enums/ShopsEnum.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/StructureWrapper.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/StructureWrapper.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/WeekActivity.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/WeekActivity.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/WeekListAdapter.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/WeekListAdapter.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/WeekListItem.java" afterPath="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/WeekListItem.java" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/res/values/strings.xml" afterPath="$PROJECT_DIR$/Basket/src/main/res/values/strings.xml" />
+      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Basket/src/main/res/values-cs/strings.xml" afterPath="$PROJECT_DIR$/Basket/src/main/res/values-cs/strings.xml" />
       <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
     </list>
     <ignored path="android-basket.iws" />
@@ -100,7 +119,64 @@
     <favorites_list name="android-basket" />
   </component>
   <component name="FileEditorManager">
-    <leaf />
+    <leaf>
+      <file leaf-file-name="ShopsEnum.java" pinned="false" current="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/enums/ShopsEnum.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state line="34" column="9" selection-start="943" selection-end="943" vertical-scroll-proportion="0.0" vertical-offset="232" max-vertical-offset="840">
+              <folding />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file leaf-file-name="ShopActivity.java" pinned="false" current="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/ShopActivity.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state line="76" column="0" selection-start="2783" selection-end="2783" vertical-scroll-proportion="0.0" vertical-offset="1140" max-vertical-offset="2535">
+              <folding>
+                <element signature="imports" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file leaf-file-name="Serializer.java" pinned="false" current="true" current-in-tab="true">
+        <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/tools/Serializer.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state line="3" column="35" selection-start="92" selection-end="92" vertical-scroll-proportion="-0.16197184" vertical-offset="183" max-vertical-offset="1035">
+              <folding />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file leaf-file-name="ShopEnumListAdapter.java" pinned="false" current="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/ShopEnumListAdapter.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state line="40" column="74" selection-start="1282" selection-end="1315" vertical-scroll-proportion="0.0" vertical-offset="600" max-vertical-offset="855">
+              <folding />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file leaf-file-name="strings.xml" pinned="false" current="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/Basket/src/main/res/values/strings.xml">
+          <provider selected="true" editor-type-id="text-editor">
+            <state line="41" column="35" selection-start="2066" selection-end="2066" vertical-scroll-proportion="0.0" vertical-offset="615" max-vertical-offset="750">
+              <folding />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file leaf-file-name="strings.xml" pinned="false" current="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/Basket/src/main/res/values-cs/strings.xml">
+          <provider selected="true" editor-type-id="text-editor">
+            <state line="40" column="39" selection-start="2064" selection-end="2111" vertical-scroll-proportion="0.0" vertical-offset="600" max-vertical-offset="750">
+              <folding />
+            </state>
+          </provider>
+        </entry>
+      </file>
+    </leaf>
   </component>
   <component name="FindManager">
     <FindUsagesManager>
@@ -118,15 +194,10 @@
   <component name="IdeDocumentHistory">
     <option name="changedFiles">
       <list>
-        <option value="$PROJECT_DIR$/Basket/src/main/res/values/styles.xml" />
-        <option value="$PROJECT_DIR$/Basket/src/main/res/values-v11/colors.xml" />
-        <option value="$PROJECT_DIR$/Basket/src/main/res/values/colors.xml" />
-        <option value="$PROJECT_DIR$/Basket/src/main/res/drawable/list_selector_flatcolor.xml" />
         <option value="$PROJECT_DIR$/Basket/src/main/res/layout/activity_shop.xml" />
         <option value="$PROJECT_DIR$/Basket/src/main/res/layout/activity_basket.xml" />
         <option value="$PROJECT_DIR$/Basket/src/main/res/layout/shop_row_list_view_layout.xml" />
         <option value="$PROJECT_DIR$/Basket/src/main/res/layout/basket_row_list_view_layout.xml" />
-        <option value="$PROJECT_DIR$/Basket/src/main/java/main/basket/ShopActivity.java" />
         <option value="$PROJECT_DIR$/Basket/src/main/res/layout/add_basket_item_dialog_layout.xml" />
         <option value="$PROJECT_DIR$/Basket/src/main/AndroidManifest.xml" />
         <option value="$PROJECT_DIR$/Basket/src/main/java/main/basket/list/BasketListAdapter.java" />
@@ -134,6 +205,11 @@
         <option value="$PROJECT_DIR$/Basket/src/main/java/main/basket/tools/FileConnectionTask.java" />
         <option value="$PROJECT_DIR$/Basket/src/main/java/main/basket/BasketActivity.java" />
         <option value="$PROJECT_DIR$/Basket/src/main/java/main/basket/WeekActivity.java" />
+        <option value="$PROJECT_DIR$/Basket/src/main/res/values-cs/strings.xml" />
+        <option value="$PROJECT_DIR$/Basket/src/main/res/values/strings.xml" />
+        <option value="$PROJECT_DIR$/Basket/src/main/java/main/basket/enums/ShopsEnum.java" />
+        <option value="$PROJECT_DIR$/Basket/src/main/java/main/basket/ShopActivity.java" />
+        <option value="$PROJECT_DIR$/Basket/src/main/java/main/basket/tools/Serializer.java" />
       </list>
     </option>
   </component>
@@ -271,10 +347,10 @@
       <sortByType />
     </navigator>
     <panes>
+      <pane id="Scope" />
       <pane id="PackagesPane">
         <subPane />
       </pane>
-      <pane id="Scope" />
       <pane id="ProjectPane">
         <subPane>
           <PATH>
@@ -321,7 +397,25 @@
               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
             </PATH_ELEMENT>
             <PATH_ELEMENT>
-              <option name="myItemId" value="layout" />
+              <option name="myItemId" value="values-cs" />
+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
+            </PATH_ELEMENT>
+          </PATH>
+          <PATH>
+            <PATH_ELEMENT>
+              <option name="myItemId" value="android-basket" />
+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
+            </PATH_ELEMENT>
+            <PATH_ELEMENT>
+              <option name="myItemId" value="main" />
+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
+            </PATH_ELEMENT>
+            <PATH_ELEMENT>
+              <option name="myItemId" value="res" />
+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
+            </PATH_ELEMENT>
+            <PATH_ELEMENT>
+              <option name="myItemId" value="values" />
               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
             </PATH_ELEMENT>
           </PATH>
@@ -479,6 +573,24 @@
               <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
             </PATH_ELEMENT>
           </PATH>
+          <PATH>
+            <PATH_ELEMENT>
+              <option name="myItemId" value="android-basket" />
+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode" />
+            </PATH_ELEMENT>
+            <PATH_ELEMENT>
+              <option name="myItemId" value="main" />
+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
+            </PATH_ELEMENT>
+            <PATH_ELEMENT>
+              <option name="myItemId" value="gen" />
+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
+            </PATH_ELEMENT>
+            <PATH_ELEMENT>
+              <option name="myItemId" value="basket" />
+              <option name="myItemType" value="com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode" />
+            </PATH_ELEMENT>
+          </PATH>
         </subPane>
       </pane>
     </panes>
@@ -486,14 +598,14 @@
   <component name="PropertiesComponent">
     <property name="project.structure.last.edited" value="Facets" />
     <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth0" value="152" />
-    <property name="OverrideImplement.combined" value="true" />
-    <property name="project.structure.proportion" value="0.15" />
     <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth1" value="177" />
+    <property name="project.structure.proportion" value="0.15" />
+    <property name="OverrideImplement.combined" value="true" />
     <property name="options.splitter.main.proportions" value="0.3" />
-    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth0" value="164" />
-    <property name="MemberChooser.sorted" value="false" />
-    <property name="recentsLimit" value="5" />
     <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder1" value="1" />
+    <property name="recentsLimit" value="5" />
+    <property name="MemberChooser.sorted" value="false" />
+    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth0" value="164" />
     <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder0" value="0" />
     <property name="last_opened_file_path" value="$PROJECT_DIR$/../TestListProject" />
     <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth2" value="183" />
@@ -501,6 +613,7 @@
     <property name="FileHistory.git4idea.history.GitHistoryProvider_flatWidth3" value="1092" />
     <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth2" value="179" />
     <property name="FileHistory.git4idea.history.GitHistoryProvider_treeWidth1" value="173" />
+    <property name="show.migrate.to.gradle.popup" value="false" />
     <property name="GoToClass.toSaveIncludeLibraries" value="false" />
     <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder2" value="2" />
     <property name="FileHistory.git4idea.history.GitHistoryProvider_flatOrder3" value="3" />
@@ -509,8 +622,8 @@
     <property name="UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager2.SHOW" value="true" />
     <property name="GoToClass.includeLibraries" value="false" />
     <property name="options.splitter.details.proportions" value="0.2" />
-    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder0" value="0" />
     <property name="GoToFile.includeJavaFiles" value="false" />
+    <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder0" value="0" />
     <property name="UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager2.WIDTH" value="317" />
     <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder3" value="3" />
     <property name="FileHistory.git4idea.history.GitHistoryProvider_treeOrder1" value="1" />
@@ -520,8 +633,8 @@
     <property name="ANDROID_EXTENDED_DEVICE_CHOOSER_SERIALS" value="emulator-5554" />
     <property name="MemberChooser.copyJavadoc" value="false" />
     <property name="restartRequiresConfirmation" value="true" />
-    <property name="options.searchVisible" value="true" />
     <property name="dynamic.classpath" value="false" />
+    <property name="options.searchVisible" value="true" />
   </component>
   <component name="RecentsManager">
     <key name="CopyClassDialog.RECENTS_KEY">
@@ -657,6 +770,33 @@
       <option name="ALTERNATIVE_JRE_PATH" />
       <method />
     </configuration>
+    <configuration default="true" type="TestNG" factoryName="TestNG">
+      <module name="" />
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
+      <option name="ALTERNATIVE_JRE_PATH" />
+      <option name="SUITE_NAME" />
+      <option name="PACKAGE_NAME" />
+      <option name="MAIN_CLASS_NAME" />
+      <option name="METHOD_NAME" />
+      <option name="GROUP_NAME" />
+      <option name="TEST_OBJECT" value="CLASS" />
+      <option name="VM_PARAMETERS" value="-ea" />
+      <option name="PARAMETERS" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="OUTPUT_DIRECTORY" />
+      <option name="ANNOTATION_TYPE" />
+      <option name="ENV_VARIABLES" />
+      <option name="PASS_PARENT_ENVS" value="true" />
+      <option name="TEST_SEARCH_SCOPE">
+        <value defaultName="moduleWithDependencies" />
+      </option>
+      <option name="USE_DEFAULT_REPORTERS" value="false" />
+      <option name="PROPERTIES_FILE" />
+      <envs />
+      <properties />
+      <listeners />
+      <method />
+    </configuration>
     <configuration default="true" type="Application" factoryName="Application">
       <option name="MAIN_CLASS_NAME" />
       <option name="VM_PARAMETERS" />
@@ -739,12 +879,6 @@
         <item index="3" class="java.lang.String" itemvalue="JUnit.All in Basket" />
       </list>
     </recent_temporary>
-    <configuration name="&lt;template&gt;" type="TestNG" default="true" selected="false">
-      <option name="MAIN_CLASS_NAME" />
-      <option name="VM_PARAMETERS" value="-ea" />
-      <option name="PARAMETERS" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
-    </configuration>
     <configuration name="&lt;template&gt;" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" default="true" selected="false">
       <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
     </configuration>
@@ -816,28 +950,29 @@
       <window_info id="Palette&#9;" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
       <window_info id="Changes" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.3290398" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
       <window_info id="Designer" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
-      <window_info id="Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32994923" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
       <window_info id="Problems" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.3290398" sideWeight="0.5" order="13" side_tool="false" content_ui="tabs" />
       <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
+      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="14" side_tool="false" content_ui="tabs" />
       <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.2997658" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
       <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32786885" sideWeight="0.5" order="8" side_tool="true" content_ui="tabs" />
       <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.20085995" sideWeight="0.14319248" order="3" side_tool="true" content_ui="tabs" />
       <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.3290398" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
       <window_info id="Build Variants" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.20085995" sideWeight="0.14319248" order="4" side_tool="true" content_ui="tabs" />
-      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.3266979" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
+      <window_info id="Messages" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.3265074" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
       <window_info id="Android" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32786885" sideWeight="0.5" order="12" side_tool="false" content_ui="tabs" />
-      <window_info id="Gradle" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="-1" side_tool="false" content_ui="tabs" />
       <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32943925" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
       <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.15432099" sideWeight="0.60211265" order="1" side_tool="false" content_ui="tabs" />
       <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="SLIDING" type="SLIDING" visible="false" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
       <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32986537" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
-      <window_info id="Project" active="true" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.1977887" sideWeight="0.6733021" order="0" side_tool="false" content_ui="combo" />
+      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" weight="0.19772999" sideWeight="0.6734926" order="0" side_tool="false" content_ui="combo" />
       <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.3266979" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
       <window_info id="Documentation" active="false" anchor="right" auto_hide="true" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.16646267" sideWeight="0.6721311" order="6" side_tool="false" content_ui="tabs" x="97" y="126" width="1486" height="800" />
       <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
+      <window_info id="Gradle" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
       <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.249694" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
       <window_info id="Thumbnails" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.3290398" sideWeight="0.5" order="11" side_tool="false" content_ui="tabs" />
       <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
+      <window_info id="Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.32994923" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
       <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
       <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.3290398" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
       <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
@@ -847,201 +982,144 @@
     <option name="myLimit" value="2678400000" />
   </component>
   <component name="VcsManagerConfiguration">
-    <option name="OFFER_MOVE_TO_ANOTHER_CHANGELIST_ON_PARTIAL_COMMIT" value="true" />
-    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="true" />
-    <option name="CHECK_NEW_TODO" value="true" />
     <option name="myTodoPanelSettings">
-      <value>
-        <are-packages-shown value="false" />
-        <are-modules-shown value="false" />
-        <flatten-packages value="false" />
-        <is-autoscroll-to-source value="false" />
-      </value>
+      <TodoPanelSettings />
     </option>
-    <option name="PERFORM_UPDATE_IN_BACKGROUND" value="true" />
-    <option name="PERFORM_COMMIT_IN_BACKGROUND" value="true" />
-    <option name="PERFORM_EDIT_IN_BACKGROUND" value="true" />
-    <option name="PERFORM_CHECKOUT_IN_BACKGROUND" value="true" />
-    <option name="PERFORM_ADD_REMOVE_IN_BACKGROUND" value="true" />
-    <option name="PERFORM_ROLLBACK_IN_BACKGROUND" value="false" />
-    <option name="CHECK_LOCALLY_CHANGED_CONFLICTS_IN_BACKGROUND" value="false" />
-    <option name="CHANGED_ON_SERVER_INTERVAL" value="60" />
-    <option name="SHOW_ONLY_CHANGED_IN_SELECTION_DIFF" value="true" />
-    <option name="CHECK_COMMIT_MESSAGE_SPELLING" value="true" />
-    <option name="DEFAULT_PATCH_EXTENSION" value="patch" />
-    <option name="SHORT_DIFF_HORIZONTALLY" value="true" />
-    <option name="SHORT_DIFF_EXTRA_LINES" value="2" />
-    <option name="SOFT_WRAPS_IN_SHORT_DIFF" value="true" />
-    <option name="INCLUDE_TEXT_INTO_PATCH" value="false" />
-    <option name="INCLUDE_TEXT_INTO_SHELF" value="false" />
-    <option name="SHOW_FILE_HISTORY_DETAILS" value="true" />
-    <option name="SHOW_VCS_ERROR_NOTIFICATIONS" value="true" />
-    <option name="SHOW_DIRTY_RECURSIVELY" value="false" />
-    <option name="LIMIT_HISTORY" value="true" />
-    <option name="MAXIMUM_HISTORY_ROWS" value="1000" />
-    <option name="UPDATE_FILTER_SCOPE_NAME" />
-    <option name="USE_COMMIT_MESSAGE_MARGIN" value="false" />
-    <option name="COMMIT_MESSAGE_MARGIN_SIZE" value="72" />
-    <option name="WRAP_WHEN_TYPING_REACHES_RIGHT_MARGIN" value="false" />
-    <option name="FORCE_NON_EMPTY_COMMENT" value="false" />
-    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="false" />
-    <option name="LAST_COMMIT_MESSAGE" />
-    <option name="MAKE_NEW_CHANGELIST_ACTIVE" value="false" />
-    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="false" />
-    <option name="CHECK_FILES_UP_TO_DATE_BEFORE_COMMIT" value="false" />
-    <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="false" />
-    <option name="REFORMAT_BEFORE_FILE_COMMIT" value="false" />
-    <option name="FILE_HISTORY_DIALOG_COMMENTS_SPLITTER_PROPORTION" value="0.8" />
-    <option name="FILE_HISTORY_DIALOG_SPLITTER_PROPORTION" value="0.5" />
-    <option name="ACTIVE_VCS_NAME" />
-    <option name="UPDATE_GROUP_BY_PACKAGES" value="false" />
-    <option name="UPDATE_GROUP_BY_CHANGELIST" value="false" />
-    <option name="UPDATE_FILTER_BY_SCOPE" value="false" />
-    <option name="SHOW_FILE_HISTORY_AS_TREE" value="false" />
-    <option name="FILE_HISTORY_SPLITTER_PROPORTION" value="0.6" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager />
   </component>
   <component name="editorHistoryManager">
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/helper/MainHelper.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/WeekListItem.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="16" column="13" selection-start="376" selection-end="376" vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="990">
+        <state line="7" column="13" selection-start="168" selection-end="168" vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="780">
           <folding>
-            <element signature="imports" expanded="true" />
+            <element signature="imports" expanded="false" />
           </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/BasketListItem.java">
-      <provider selected="true" editor-type-id="text-editor">
-        <state line="3" column="13" selection-start="87" selection-end="87" vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="675">
-          <folding />
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/CommonListItem.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/BaseListAdapter.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="2" column="0" selection-start="37" selection-end="37" vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="1335">
+        <state line="2" column="0" selection-start="27" selection-end="27" vertical-scroll-proportion="0.054744527" vertical-offset="0" max-vertical-offset="855">
           <folding>
-            <element signature="imports" expanded="true" />
+            <element signature="imports" expanded="false" />
           </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/ShopListItem.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/BasketListAdapter.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="9" column="13" selection-start="205" selection-end="205" vertical-scroll-proportion="0.0" vertical-offset="1" max-vertical-offset="960">
+        <state line="27" column="27" selection-start="754" selection-end="754" vertical-scroll-proportion="0.7390511" vertical-offset="0" max-vertical-offset="945">
           <folding>
-            <element signature="imports" expanded="true" />
+            <element signature="imports" expanded="false" />
           </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/StructureWrapper.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/ShopListAdapter.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="6" column="13" selection-start="144" selection-end="144" vertical-scroll-proportion="0.0" vertical-offset="4" max-vertical-offset="675">
+        <state line="16" column="13" selection-start="397" selection-end="397" vertical-scroll-proportion="0.4361314" vertical-offset="1" max-vertical-offset="1080">
           <folding>
-            <element signature="imports" expanded="true" />
+            <element signature="imports" expanded="false" />
           </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/structure/WeekListItem.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/WeekListAdapter.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="7" column="13" selection-start="168" selection-end="168" vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="780">
+        <state line="15" column="13" selection-start="364" selection-end="364" vertical-scroll-proportion="0.41058394" vertical-offset="0" max-vertical-offset="1170">
           <folding>
-            <element signature="imports" expanded="true" />
+            <element signature="imports" expanded="false" />
           </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/BaseListAdapter.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/tools/Connection.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="2" column="0" selection-start="27" selection-end="27" vertical-scroll-proportion="0.054744527" vertical-offset="0" max-vertical-offset="855">
-          <folding>
-            <element signature="imports" expanded="true" />
-          </folding>
+        <state line="5" column="31" selection-start="149" selection-end="149" vertical-scroll-proportion="0.13686131" vertical-offset="0" max-vertical-offset="2370">
+          <folding />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/BasketListAdapter.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/tools/FileConnectionTask.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="27" column="27" selection-start="754" selection-end="754" vertical-scroll-proportion="0.7390511" vertical-offset="0" max-vertical-offset="945">
+        <state line="46" column="4" selection-start="1535" selection-end="1535" vertical-scroll-proportion="0.0" vertical-offset="1498" max-vertical-offset="3315">
           <folding>
-            <element signature="imports" expanded="true" />
+            <element signature="imports" expanded="false" />
           </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/ShopEnumListAdapter.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/BaseActivity.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="15" column="13" selection-start="358" selection-end="358" vertical-scroll-proportion="0.41058394" vertical-offset="0" max-vertical-offset="825">
+        <state line="14" column="22" selection-start="331" selection-end="331" vertical-scroll-proportion="0.0" vertical-offset="2" max-vertical-offset="1260">
           <folding>
-            <element signature="imports" expanded="true" />
+            <element signature="imports" expanded="false" />
           </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/ShopListAdapter.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/BasketActivity.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="16" column="13" selection-start="397" selection-end="397" vertical-scroll-proportion="0.4361314" vertical-offset="1" max-vertical-offset="1080">
-          <folding>
-            <element signature="imports" expanded="true" />
-          </folding>
+        <state line="10" column="0" selection-start="280" selection-end="280" vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="2130">
+          <folding />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/WeekListAdapter.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/WeekActivity.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="15" column="13" selection-start="364" selection-end="364" vertical-scroll-proportion="0.41058394" vertical-offset="0" max-vertical-offset="1170">
+        <state line="29" column="47" selection-start="887" selection-end="887" vertical-scroll-proportion="0.7883212" vertical-offset="3" max-vertical-offset="3315">
           <folding>
-            <element signature="imports" expanded="true" />
+            <element signature="imports" expanded="false" />
           </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/tools/Connection.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/res/values-cs/strings.xml">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="5" column="31" selection-start="149" selection-end="149" vertical-scroll-proportion="0.13686131" vertical-offset="0" max-vertical-offset="2370">
+        <state line="40" column="39" selection-start="2064" selection-end="2111" vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="750">
           <folding />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/tools/FileConnectionTask.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/res/values/strings.xml">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="46" column="4" selection-start="1535" selection-end="1535" vertical-scroll-proportion="0.0" vertical-offset="1498" max-vertical-offset="3315">
-          <folding>
-            <element signature="imports" expanded="true" />
-          </folding>
+        <state line="41" column="35" selection-start="2066" selection-end="2066" vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="750">
+          <folding />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/BaseActivity.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/list/ShopEnumListAdapter.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="14" column="22" selection-start="331" selection-end="331" vertical-scroll-proportion="0.0" vertical-offset="2" max-vertical-offset="1260">
-          <folding>
-            <element signature="imports" expanded="true" />
-          </folding>
+        <state line="40" column="74" selection-start="1282" selection-end="1315" vertical-scroll-proportion="0.0" vertical-offset="600" max-vertical-offset="855">
+          <folding />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/BasketActivity.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/enums/ShopsEnum.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="10" column="0" selection-start="280" selection-end="280" vertical-scroll-proportion="0.0" vertical-offset="0" max-vertical-offset="2130">
+        <state line="34" column="9" selection-start="943" selection-end="943" vertical-scroll-proportion="0.0" vertical-offset="232" max-vertical-offset="840">
           <folding />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/WeekActivity.java">
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/ShopActivity.java">
       <provider selected="true" editor-type-id="text-editor">
-        <state line="29" column="47" selection-start="887" selection-end="887" vertical-scroll-proportion="0.7883212" vertical-offset="3" max-vertical-offset="3315">
+        <state line="76" column="0" selection-start="2783" selection-end="2783" vertical-scroll-proportion="0.0" vertical-offset="1140" max-vertical-offset="2535">
           <folding>
             <element signature="imports" expanded="true" />
           </folding>
         </state>
       </provider>
     </entry>
+    <entry file="file://$PROJECT_DIR$/Basket/src/main/java/main/basket/tools/Serializer.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state line="3" column="35" selection-start="92" selection-end="92" vertical-scroll-proportion="-0.16197184" vertical-offset="183" max-vertical-offset="1035">
+          <folding />
+        </state>
+      </provider>
+    </entry>
   </component>
   <component name="masterDetails">
     <states>
diff --git a/Basket/src/main/gen/main/basket/BuildConfig.java b/Basket/src/main/gen/main/basket/BuildConfig.java
index bc6805d..707d9ec 100644
--- a/Basket/src/main/gen/main/basket/BuildConfig.java
+++ b/Basket/src/main/gen/main/basket/BuildConfig.java
@@ -1,8 +1,8 @@
 /*___Generated_by_IDEA___*/
 
-/** Automatically generated file. DO NOT MODIFY */
 package main.basket;
 
+/* This stub is only used by the IDE. It is NOT the BuildConfig class actually packed into the APK */
 public final class BuildConfig {
-    public final static boolean DEBUG = true;
+  public final static boolean DEBUG = Boolean.parseBoolean(null);
 }
\ No newline at end of file
diff --git a/Basket/src/main/java/main/basket/BaseActivity.java b/Basket/src/main/java/main/basket/BaseActivity.java
index 2a344af..06af123 100644
--- a/Basket/src/main/java/main/basket/BaseActivity.java
+++ b/Basket/src/main/java/main/basket/BaseActivity.java
@@ -11,69 +11,77 @@ import java.util.ArrayList;
 
 import main.basket.list.BaseListAdapter;
 
-/** Created by martin on 28.7.13. */
+/**
+ * Created by martin on 28.7.13.
+ */
 public abstract class BaseActivity extends Activity {
 
-  protected boolean showOpEditRemove = false;
-  protected BaseListAdapter adapter = null;
-  protected SimpleDateFormat df = new SimpleDateFormat("d. MMM");
-  protected int selectedItem = -1;
-  protected ListView listView;
+    protected boolean showOpEditRemove = false;
+    protected BaseListAdapter adapter = null;
+    protected SimpleDateFormat df = new SimpleDateFormat("d. MMM");
+    protected int selectedItem = -1;
+    protected ListView listView;
 
-  @Override
-  public void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
-  }
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+    }
 
-  @Override
-  protected void onResume() {
-    super.onResume();
-    if (adapter != null) {
-      adapter.notifyDataSetChanged();
+    @Override
+    protected void onResume() {
+        super.onResume();
+        if (adapter != null) {
+            adapter.notifyDataSetChanged();
+        }
     }
-  }
 
-  @Override
-  public boolean onCreateOptionsMenu(Menu menu) {
-    // Inflate the menu; this adds items to the action bar if it is present.
-    getMenuInflater().inflate(R.menu.main, menu);
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        // Inflate the menu; this adds items to the action bar if it is present.
+        getMenuInflater().inflate(R.menu.main, menu);
 
-    for (int i = 0; i < menu.size(); i++) {
-      MenuItem mi = menu.getItem(i);
-      if ((mi.getItemId() == R.id.action_edit) || (mi.getItemId() == R.id.action_remove)) {
-        mi.setVisible(showOpEditRemove);
-      }
+        for (int i = 0; i < menu.size(); i++) {
+            MenuItem mi = menu.getItem(i);
+            if ((mi.getItemId() == R.id.action_edit) || (mi.getItemId() == R.id.action_remove)) {
+                mi.setVisible(showOpEditRemove);
+            }
+        }
+        return true;
     }
-    return true;
-  }
 
-  @Override
-  public boolean onOptionsItemSelected(MenuItem item) {
-    // Handle item selection
-    switch (item.getItemId()) {
-      case R.id.action_add:
-        addButtonClick();
-        return true;
-      case R.id.action_remove:
-        removeButtonClick();
-        return true;
-      case R.id.action_edit:
-        editButtonClick();
-        return true;
-      default:
-        return super.onOptionsItemSelected(item);
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // Handle item selection
+        switch (item.getItemId()) {
+            case R.id.action_add:
+                addButtonClick();
+                return true;
+            case R.id.action_remove:
+                removeButtonClick();
+                return true;
+            case R.id.action_edit:
+                editButtonClick();
+                return true;
+            default:
+                return super.onOptionsItemSelected(item);
+        }
     }
-  }
 
-  /** Called when the user clicks the Edit button */
-  protected abstract void editButtonClick();
+    /**
+     * Called when the user clicks the Edit button
+     */
+    protected abstract void editButtonClick();
 
-  /** Called when the user clicks the Add button */
-  protected abstract void addButtonClick();
+    /**
+     * Called when the user clicks the Add button
+     */
+    protected abstract void addButtonClick();
 
-  /** Called when the user clicks the Remove button */
-  protected abstract void removeButtonClick();
+    /**
+     * Called when the user clicks the Remove button
+     */
+    protected abstract void removeButtonClick();
 
-  protected abstract ArrayList<?> validateAndSortList(ArrayList<?> list);
+    protected abstract ArrayList<?> validateAndSortList(ArrayList<?> list);
 
 }
\ No newline at end of file
diff --git a/Basket/src/main/java/main/basket/BasketActivity.java b/Basket/src/main/java/main/basket/BasketActivity.java
index 6a6611c..2bbb110 100644
--- a/Basket/src/main/java/main/basket/BasketActivity.java
+++ b/Basket/src/main/java/main/basket/BasketActivity.java
@@ -19,137 +19,139 @@ import main.basket.list.BasketListAdapter;
 import main.basket.list.structure.BasketListItem;
 import main.basket.list.structure.ShopListItem;
 
-/** Created by martin on 29.7.13. */
+/**
+ * Created by martin on 29.7.13.
+ */
 public class BasketActivity extends BaseActivity {
 
-  protected ShopListItem shop;
-
-  protected void setBasket(ArrayList<BasketListItem> basket) {
-    shop.setBasket((ArrayList<BasketListItem>) validateAndSortList(
-        (basket == null) ? new ArrayList<BasketListItem>() : basket) );
-    adapter.setListData(shop.getBasket());
-    adapter.notifyDataSetChanged();
-  }
-
-  @Override
-  public void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
-    setContentView(R.layout.activity_basket);
-    int i = (int) getIntent().getSerializableExtra("weekNo");
-    int j = (int) getIntent().getSerializableExtra("shopNo");
-    shop = WeekActivity.weeks.getWeeks().get(i).getShops().get(j);
-
-    TextView tv = (TextView) findViewById(R.id.position_label);
-    tv.setText(shop.getHeadLine() + " (" + df.format(shop.getDateFrom().getTime())
-        + " - " + df.format(shop.getDateTo().getTime()) + ")");
-
-    shop.setBasket((ArrayList<BasketListItem>) validateAndSortList(shop.getBasket()));
-
-    listView = (ListView) findViewById(R.id.lv_basket);
-    listView.setChoiceMode(AbsListView.CHOICE_MODE_SINGLE);
-    adapter = new BasketListAdapter(BasketActivity.this, shop.getBasket());
-
-    listView.setAdapter(adapter);
-    listView.setItemsCanFocus(true);
-    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-      @Override
-      public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        if (selectedItem == position) {
-          editButtonClick();
-        } else {
-          selectedItem = position;
-          showOpEditRemove = true;
-          MainHelper.invalidateOptionsMenu(BasketActivity.this);
-        }
-      }
-    });
-    listView.setOnFocusChangeListener(new View.OnFocusChangeListener() {
-      @Override
-      public void onFocusChange(View v, boolean hasFocus) {
-        showOpEditRemove = false;
-        MainHelper.invalidateOptionsMenu(BasketActivity.this);
-      }
-    });
-  }
-
-  @Override
-  protected void editButtonClick() {
-    int i = listView.getCheckedItemPosition();
-    if (i >= 0) {
-      final BasketListItem item = shop.getBasket().get(i);
-      AddBasketItemDialog dialog = new AddBasketItemDialog(this, item, R.style.DialogSlideAnim);
-      dialog.setPositiveButtonAction(new DialogInterface.OnClickListener() {
-        @Override
-        public void onClick(DialogInterface dialog, int which) {
-          setBasket(shop.getBasket());
-        }
-      });
-      dialog.show();
+    protected ShopListItem shop;
+
+    protected void setBasket(ArrayList<BasketListItem> basket) {
+        shop.setBasket((ArrayList<BasketListItem>) validateAndSortList(
+                (basket == null) ? new ArrayList<BasketListItem>() : basket));
+        adapter.setListData(shop.getBasket());
+        adapter.notifyDataSetChanged();
     }
-  }
-
-  @Override
-  protected void addButtonClick() {
-    AddBasketItemDialog dialog = new AddBasketItemDialog(this, null, R.style.DialogSlideAnim);
-    dialog.setPositiveButtonAction(new DialogInterface.OnClickListener() {
-      @Override
-      public void onClick(DialogInterface dialog, int which) {
-        BasketListItem item = ((AddBasketItemDialog) dialog).getBasketItem();
-        shop.addBasketItem(item);
-        setBasket(shop.getBasket());
-
-        listView.setItemChecked(shop.getBasket().indexOf(item), true);
-        showOpEditRemove = true;
-        MainHelper.invalidateOptionsMenu(BasketActivity.this);
-      }
-    });
-    dialog.show();
-  }
-
-  @Override
-  protected void removeButtonClick() {
-    AlertDialog.Builder builder = new AlertDialog.Builder(this);
-    builder.setMessage(R.string.are_u_sure)
-        .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
-          @Override
-          public void onClick(DialogInterface dialog, int which) {
-            int i = listView.getCheckedItemPosition();
-            if (i >= 0) {
-              shop.removeBasketItem(i);
-              setBasket(shop.getBasket());
-              int size = shop.getBasket().size();
-              if (size > 0) {
-                if (i >= size) {
-                  i = size - 1;
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_basket);
+        int i = (int) getIntent().getSerializableExtra("weekNo");
+        int j = (int) getIntent().getSerializableExtra("shopNo");
+        shop = WeekActivity.weeks.getWeeks().get(i).getShops().get(j);
+
+        TextView tv = (TextView) findViewById(R.id.position_label);
+        tv.setText(shop.getHeadLine() + " (" + df.format(shop.getDateFrom().getTime())
+                + " - " + df.format(shop.getDateTo().getTime()) + ")");
+
+        shop.setBasket((ArrayList<BasketListItem>) validateAndSortList(shop.getBasket()));
+
+        listView = (ListView) findViewById(R.id.lv_basket);
+        listView.setChoiceMode(AbsListView.CHOICE_MODE_SINGLE);
+        adapter = new BasketListAdapter(BasketActivity.this, shop.getBasket());
+
+        listView.setAdapter(adapter);
+        listView.setItemsCanFocus(true);
+        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                if (selectedItem == position) {
+                    editButtonClick();
+                } else {
+                    selectedItem = position;
+                    showOpEditRemove = true;
+                    MainHelper.invalidateOptionsMenu(BasketActivity.this);
                 }
-                listView.setItemChecked(i, true);
-                showOpEditRemove = true;
-              } else {
+            }
+        });
+        listView.setOnFocusChangeListener(new View.OnFocusChangeListener() {
+            @Override
+            public void onFocusChange(View v, boolean hasFocus) {
                 showOpEditRemove = false;
-              }
-              MainHelper.invalidateOptionsMenu(BasketActivity.this);
+                MainHelper.invalidateOptionsMenu(BasketActivity.this);
             }
-          }
-        })
-        .setNegativeButton(android.R.string.no, null)
-        .show();
-  }
-
-  @Override
-  protected ArrayList<?> validateAndSortList(ArrayList<?> list) {
-    ArrayList<BasketListItem> l = (ArrayList<BasketListItem>) list;
-    // sort by date desc
-    Collections.sort(l, new Comparator<BasketListItem>() {
-      @Override
-      public int compare(BasketListItem lhs, BasketListItem rhs) {
-        int res = lhs.getHeadLine().compareTo(rhs.getHeadLine());
-        if (res == 0) {
-          res = (Double.compare(lhs.getPrice(), rhs.getPrice()));
+        });
+    }
+
+    @Override
+    protected void editButtonClick() {
+        int i = listView.getCheckedItemPosition();
+        if (i >= 0) {
+            final BasketListItem item = shop.getBasket().get(i);
+            AddBasketItemDialog dialog = new AddBasketItemDialog(this, item, R.style.DialogSlideAnim);
+            dialog.setPositiveButtonAction(new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    setBasket(shop.getBasket());
+                }
+            });
+            dialog.show();
         }
-        return res;
-      }
-    });
-    return list;
-  }
+    }
+
+    @Override
+    protected void addButtonClick() {
+        AddBasketItemDialog dialog = new AddBasketItemDialog(this, null, R.style.DialogSlideAnim);
+        dialog.setPositiveButtonAction(new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                BasketListItem item = ((AddBasketItemDialog) dialog).getBasketItem();
+                shop.addBasketItem(item);
+                setBasket(shop.getBasket());
+
+                listView.setItemChecked(shop.getBasket().indexOf(item), true);
+                showOpEditRemove = true;
+                MainHelper.invalidateOptionsMenu(BasketActivity.this);
+            }
+        });
+        dialog.show();
+    }
+
+    @Override
+    protected void removeButtonClick() {
+        AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        builder.setMessage(R.string.are_u_sure)
+                .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        int i = listView.getCheckedItemPosition();
+                        if (i >= 0) {
+                            shop.removeBasketItem(i);
+                            setBasket(shop.getBasket());
+                            int size = shop.getBasket().size();
+                            if (size > 0) {
+                                if (i >= size) {
+                                    i = size - 1;
+                                }
+                                listView.setItemChecked(i, true);
+                                showOpEditRemove = true;
+                            } else {
+                                showOpEditRemove = false;
+                            }
+                            MainHelper.invalidateOptionsMenu(BasketActivity.this);
+                        }
+                    }
+                })
+                .setNegativeButton(android.R.string.no, null)
+                .show();
+    }
+
+    @Override
+    protected ArrayList<?> validateAndSortList(ArrayList<?> list) {
+        ArrayList<BasketListItem> l = (ArrayList<BasketListItem>) list;
+        // sort by date desc
+        Collections.sort(l, new Comparator<BasketListItem>() {
+            @Override
+            public int compare(BasketListItem lhs, BasketListItem rhs) {
+                int res = lhs.getHeadLine().compareTo(rhs.getHeadLine());
+                if (res == 0) {
+                    res = (Double.compare(lhs.getPrice(), rhs.getPrice()));
+                }
+                return res;
+            }
+        });
+        return list;
+    }
 
 }
\ No newline at end of file
diff --git a/Basket/src/main/java/main/basket/ShopActivity.java b/Basket/src/main/java/main/basket/ShopActivity.java
index 31f583d..50c6ba9 100644
--- a/Basket/src/main/java/main/basket/ShopActivity.java
+++ b/Basket/src/main/java/main/basket/ShopActivity.java
@@ -10,7 +10,6 @@ import android.widget.AdapterView;
 import android.widget.ListView;
 import android.widget.TextView;
 
-import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Calendar;
@@ -24,147 +23,157 @@ import main.basket.list.ShopListAdapter;
 import main.basket.list.structure.ShopListItem;
 import main.basket.list.structure.WeekListItem;
 
-/** Created by martin on 28.7.13. */
+/**
+ * Created by martin on 28.7.13.
+ */
 public class ShopActivity extends BaseActivity {
 
-  private WeekListItem week;
-
-  protected void setShops(ArrayList<ShopListItem> shops) {
-    week.setShops((ArrayList<ShopListItem>) validateAndSortList(
-        (shops == null) ? new ArrayList<ShopListAdapter>() : shops) );
-    adapter.setListData(week.getShops());
-    adapter.notifyDataSetChanged();
-  }
-
-  @Override
-  public void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
-    setContentView(R.layout.activity_shop);
-    int i = (int) getIntent().getSerializableExtra("weekNo");
-    week = WeekActivity.weeks.getWeeks().get(i);
-
-    TextView tv = (TextView) findViewById(R.id.position_label);
-    tv.setText(week.getHeadLine() + " (" + df.format(week.getDateFrom().getTime())
-        + " - " + df.format(week.getDateTo().getTime()) + ")");
-
-    week.setShops((ArrayList<ShopListItem>) validateAndSortList(week.getShops()));
-
-    listView = (ListView) findViewById(R.id.lv_shop);
-    adapter = new ShopListAdapter(ShopActivity.this, week.getShops());
-
-    listView.setAdapter(adapter);
-    listView.setChoiceMode(AbsListView.CHOICE_MODE_SINGLE);
-    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-      @Override
-      public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        if (selectedItem == position) {
-          editButtonClick();
-        } else {
-          selectedItem = position;
-          showOpEditRemove = true;
-          MainHelper.invalidateOptionsMenu(ShopActivity.this);
-        }
-      }
-    });
-    listView.setOnFocusChangeListener(new View.OnFocusChangeListener() {
-      @Override
-      public void onFocusChange(View v, boolean hasFocus) {
-        showOpEditRemove = false;
-        MainHelper.invalidateOptionsMenu(ShopActivity.this);
-      }
-    });
-  }
-
-  /** Called when the user clicks the Edit button */
-  public void editButtonClick() {
-    // open
- //      Toast.makeText(ShopActivity.this, "open shop", Toast.LENGTH_SHORT).show();
-
-    Intent myIntent = new Intent(ShopActivity.this, BasketActivity.class);
-   // myIntent.putExtra("shop", week.getShops().get(listView.getCheckedItemPosition())); //Optional parameters
-    myIntent.putExtra("weekNo", (int) getIntent().getSerializableExtra("weekNo")); //Optional parameters
-    myIntent.putExtra("shopNo", listView.getCheckedItemPosition()); //Optional parameters
-    ShopActivity.this.startActivity(myIntent);
-  }
-
-  /** Called when the user clicks the Add button */
-  @Override
-  protected void addButtonClick() {
-    final ShopEnumListAdapter shopAdapter = new ShopEnumListAdapter(ShopActivity.this,
-        new ArrayList<ShopsEnum>(Arrays.asList(ShopsEnum.values())));
-
-    ArrayList<ShopsEnum> rmList = new ArrayList<ShopsEnum>();
-    for (ShopListItem item : week.getShops()) {
-      rmList.add(item.getShop());
+    private WeekListItem week;
+
+    protected void setShops(ArrayList<ShopListItem> shops) {
+        week.setShops((ArrayList<ShopListItem>) validateAndSortList(
+                (shops == null) ? new ArrayList<ShopListAdapter>() : shops));
+        adapter.setListData(week.getShops());
+        adapter.notifyDataSetChanged();
     }
-    shopAdapter.getListData().removeAll(rmList);
-
-    AlertDialog.Builder b = new AlertDialog.Builder(this);
-    b.setTitle(R.string.choose_shop);
-    b.setAdapter(shopAdapter, new DialogInterface.OnClickListener() {
-      @Override
-      public void onClick(DialogInterface dialog, int which) {
-        ShopsEnum shop = (ShopsEnum) shopAdapter.getItem(which);
-
-        Calendar cal = Calendar.getInstance();
-        cal.setTime(week.getDateFrom());
-        while (cal.get(Calendar.DAY_OF_WEEK) != shop.getBeggingDay()) {
-          cal.add(Calendar.DAY_OF_YEAR, 1);
-        }
 
-        ShopListItem item = new ShopListItem(shop, cal.getTime(), null);
-        week.addShop(item);
-        setShops(week.getShops());
-
-        listView.setItemChecked(week.getShops().indexOf(item), true);
-        showOpEditRemove = true;
-        MainHelper.invalidateOptionsMenu(ShopActivity.this);
-      }
-    });
-    b.show();
-  }
-
-  /** Called when the user clicks the Remove button */
-  @Override
-  protected void removeButtonClick() {
-    AlertDialog.Builder builder = new AlertDialog.Builder(this);
-    builder.setMessage(R.string.are_u_sure)
-        .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
-          @Override
-          public void onClick(DialogInterface dialog, int which) {
-            int i = listView.getCheckedItemPosition();
-            if (i >= 0) {
-              week.removeShop(i);
-              setShops(week.getShops());
-              int size = week.getShops().size();
-              if (size > 0) {
-                if (i >= size) {
-                  i = size - 1;
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_shop);
+        int i = (int) getIntent().getSerializableExtra("weekNo");
+        week = WeekActivity.weeks.getWeeks().get(i);
+
+        TextView tv = (TextView) findViewById(R.id.position_label);
+        tv.setText(week.getHeadLine() + " (" + df.format(week.getDateFrom().getTime())
+                + " - " + df.format(week.getDateTo().getTime()) + ")");
+
+        week.setShops((ArrayList<ShopListItem>) validateAndSortList(week.getShops()));
+
+        listView = (ListView) findViewById(R.id.lv_shop);
+        adapter = new ShopListAdapter(ShopActivity.this, week.getShops());
+
+        listView.setAdapter(adapter);
+        listView.setChoiceMode(AbsListView.CHOICE_MODE_SINGLE);
+        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                if (selectedItem == position) {
+                    editButtonClick();
+                } else {
+                    selectedItem = position;
+                    showOpEditRemove = true;
+                    MainHelper.invalidateOptionsMenu(ShopActivity.this);
                 }
-                listView.setItemChecked(i, true);
-                showOpEditRemove = true;
-              } else {
+            }
+        });
+        listView.setOnFocusChangeListener(new View.OnFocusChangeListener() {
+            @Override
+            public void onFocusChange(View v, boolean hasFocus) {
                 showOpEditRemove = false;
-              }
-              MainHelper.invalidateOptionsMenu(ShopActivity.this);
+                MainHelper.invalidateOptionsMenu(ShopActivity.this);
+            }
+        });
+
+        ShopsEnum.SHOP_OTHER.setName(getString(R.string.other_shop));
+    }
+
+    /**
+     * Called when the user clicks the Edit button
+     */
+    public void editButtonClick() {
+        // open
+        //      Toast.makeText(ShopActivity.this, "open shop", Toast.LENGTH_SHORT).show();
+
+        Intent myIntent = new Intent(ShopActivity.this, BasketActivity.class);
+        // myIntent.putExtra("shop", week.getShops().get(listView.getCheckedItemPosition())); //Optional parameters
+        myIntent.putExtra("weekNo", (int) getIntent().getSerializableExtra("weekNo")); //Optional parameters
+        myIntent.putExtra("shopNo", listView.getCheckedItemPosition()); //Optional parameters
+        ShopActivity.this.startActivity(myIntent);
+    }
+
+    /**
+     * Called when the user clicks the Add button
+     */
+    @Override
+    protected void addButtonClick() {
+        final ShopEnumListAdapter shopAdapter = new ShopEnumListAdapter(ShopActivity.this,
+                new ArrayList<ShopsEnum>(Arrays.asList(ShopsEnum.values())));
+
+        ArrayList<ShopsEnum> rmList = new ArrayList<ShopsEnum>();
+        for (ShopListItem item : week.getShops()) {
+            rmList.add(item.getShop());
+        }
+        shopAdapter.getListData().removeAll(rmList);
+
+        AlertDialog.Builder b = new AlertDialog.Builder(this);
+        b.setTitle(R.string.choose_shop);
+        b.setAdapter(shopAdapter, new DialogInterface.OnClickListener() {
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                ShopsEnum shop = (ShopsEnum) shopAdapter.getItem(which);
+
+                Calendar cal = Calendar.getInstance();
+                cal.setTime(week.getDateFrom());
+                while (cal.get(Calendar.DAY_OF_WEEK) != shop.getBeggingDay()) {
+                    cal.add(Calendar.DAY_OF_YEAR, 1);
+                }
+
+                ShopListItem item = new ShopListItem(shop, cal.getTime(), null);
+                week.addShop(item);
+                setShops(week.getShops());
+
+                listView.setItemChecked(week.getShops().indexOf(item), true);
+                showOpEditRemove = true;
+                MainHelper.invalidateOptionsMenu(ShopActivity.this);
             }
-          }
-        })
-        .setNegativeButton(android.R.string.no, null)
-        .show();
-  }
-
-  @Override
-  protected ArrayList<?> validateAndSortList(ArrayList<?> list) {
-    ArrayList<ShopListItem> l = (ArrayList<ShopListItem>) list;
-    // sort by date desc
-    Collections.sort(l, new Comparator<ShopListItem>() {
-      @Override
-      public int compare(ShopListItem lhs, ShopListItem rhs) {
-        return lhs.getShop().getName().compareTo(rhs.getShop().getName());
-      }
-    });
-    return list;
-  }
+        });
+        b.show();
+    }
+
+    /**
+     * Called when the user clicks the Remove button
+     */
+    @Override
+    protected void removeButtonClick() {
+        AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        builder.setMessage(R.string.are_u_sure)
+                .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        int i = listView.getCheckedItemPosition();
+                        if (i >= 0) {
+                            week.removeShop(i);
+                            setShops(week.getShops());
+                            int size = week.getShops().size();
+                            if (size > 0) {
+                                if (i >= size) {
+                                    i = size - 1;
+                                }
+                                listView.setItemChecked(i, true);
+                                showOpEditRemove = true;
+                            } else {
+                                showOpEditRemove = false;
+                            }
+                            MainHelper.invalidateOptionsMenu(ShopActivity.this);
+                        }
+                    }
+                })
+                .setNegativeButton(android.R.string.no, null)
+                .show();
+    }
+
+    @Override
+    protected ArrayList<?> validateAndSortList(ArrayList<?> list) {
+        ArrayList<ShopListItem> l = (ArrayList<ShopListItem>) list;
+        // sort by date desc
+        Collections.sort(l, new Comparator<ShopListItem>() {
+            @Override
+            public int compare(ShopListItem lhs, ShopListItem rhs) {
+                return lhs.getShop().getName().compareTo(rhs.getShop().getName());
+            }
+        });
+        return list;
+    }
 
 }
\ No newline at end of file
diff --git a/Basket/src/main/java/main/basket/WeekActivity.java b/Basket/src/main/java/main/basket/WeekActivity.java
index 70734a7..32311ae 100644
--- a/Basket/src/main/java/main/basket/WeekActivity.java
+++ b/Basket/src/main/java/main/basket/WeekActivity.java
@@ -4,6 +4,7 @@ import android.app.AlertDialog;
 import android.app.DatePickerDialog;
 import android.app.Dialog;
 import android.content.DialogInterface;
+import android.content.Intent;
 import android.os.Bundle;
 import android.os.Environment;
 import android.view.Menu;
@@ -13,7 +14,6 @@ import android.widget.AbsListView;
 import android.widget.AdapterView;
 import android.widget.DatePicker;
 import android.widget.ListView;
-import android.content.Intent;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -23,209 +23,217 @@ import java.util.Comparator;
 import java.util.GregorianCalendar;
 import java.util.Iterator;
 
-import main.basket.tools.FileConnectionTask;
 import main.basket.helper.MainHelper;
 import main.basket.list.WeekListAdapter;
 import main.basket.list.structure.StructureWrapper;
 import main.basket.list.structure.WeekListItem;
+import main.basket.tools.FileConnectionTask;
 
-/** Created by martin on 27.7.13. */
+/**
+ * Created by martin on 27.7.13.
+ */
 public class WeekActivity extends BaseActivity {
 
-  public static StructureWrapper weeks = null;
-  public static String basketFileName = "basket.json";
-
-  public void setWeeks(StructureWrapper weeks) {
-    WeekActivity.weeks = (weeks == null) ? new StructureWrapper() : weeks;
-    WeekActivity.weeks.setWeeks((ArrayList<WeekListItem>) validateAndSortList(WeekActivity.weeks.getWeeks()));
-    adapter.setListData(weeks.getWeeks());
-    adapter.notifyDataSetChanged();
-  }
-
-  @Override
-  public void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
-    setContentView(R.layout.activity_week);
-
-    listView = (ListView) findViewById(R.id.lv_week);
-    weeks   = new StructureWrapper();
-    adapter = new WeekListAdapter(WeekActivity.this, weeks.getWeeks());
-
-    listView.setAdapter(adapter);
-    listView.setChoiceMode(AbsListView.CHOICE_MODE_SINGLE);
-    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
-      @Override
-      public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        if (selectedItem == position) {
-          editButtonClick();
-        } else {
-          selectedItem = position;
-          showOpEditRemove = true;
-          MainHelper.invalidateOptionsMenu(WeekActivity.this);
-        }
-      }
-    });
-    listView.setOnFocusChangeListener(new View.OnFocusChangeListener() {
-      @Override
-      public void onFocusChange(View v, boolean hasFocus) {
-        showOpEditRemove = false;
-        MainHelper.invalidateOptionsMenu(WeekActivity.this);
-      }
-    });
-    new FileConnectionTask(WeekActivity.this, false, true).execute(getDownloadStorageDirPath() + "/" + basketFileName);
-  }
-
-  /** Called when the user clicks the Add button */
-  public void addButtonClick() {
-    Calendar cal = Calendar.getInstance();
-    Dialog d = new DatePickerDialog(WeekActivity.this, new DatePickerDialog.OnDateSetListener() {
-          @Override
-          public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
-            WeekListItem item = new WeekListItem("week", new GregorianCalendar(year, monthOfYear, dayOfMonth).getTime());
-            weeks.addWeek(item);
-            setWeeks(weeks);
-
-            listView.setItemChecked(findWeekIndexInList(weeks.getWeeks(), item), true);
-            showOpEditRemove = true;
-            MainHelper.invalidateOptionsMenu(WeekActivity.this);
-          }
-        },
-        cal.get(Calendar.YEAR), cal.get(Calendar.MONTH), cal.get(Calendar.DAY_OF_MONTH));
-    d.show();
-  }
-
-  /** Called when the user clicks the Remove button */
-  @Override
-  protected void removeButtonClick() {
-    AlertDialog.Builder builder = new AlertDialog.Builder(this);
-    builder.setMessage(R.string.are_u_sure)
-        .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
-          @Override
-          public void onClick(DialogInterface dialog, int which) {
-            int i = listView.getCheckedItemPosition();
-            if (i >= 0) {
-              weeks.removeWeek(i);
-              setWeeks(weeks);
-              int size = weeks.getWeeks().size();
-              if (size > 0) {
-                if (i >= size) {
-                  i = size - 1;
+    public static StructureWrapper weeks = null;
+    public static String basketFileName = "basket.json";
+
+    public void setWeeks(StructureWrapper weeks) {
+        WeekActivity.weeks = (weeks == null) ? new StructureWrapper() : weeks;
+        WeekActivity.weeks.setWeeks((ArrayList<WeekListItem>) validateAndSortList(WeekActivity.weeks.getWeeks()));
+        adapter.setListData(weeks.getWeeks());
+        adapter.notifyDataSetChanged();
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_week);
+
+        listView = (ListView) findViewById(R.id.lv_week);
+        weeks = new StructureWrapper();
+        adapter = new WeekListAdapter(WeekActivity.this, weeks.getWeeks());
+
+        listView.setAdapter(adapter);
+        listView.setChoiceMode(AbsListView.CHOICE_MODE_SINGLE);
+        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                if (selectedItem == position) {
+                    editButtonClick();
+                } else {
+                    selectedItem = position;
+                    showOpEditRemove = true;
+                    MainHelper.invalidateOptionsMenu(WeekActivity.this);
                 }
-                listView.setItemChecked(i, true);
-                showOpEditRemove = true;
-              } else {
+            }
+        });
+        listView.setOnFocusChangeListener(new View.OnFocusChangeListener() {
+            @Override
+            public void onFocusChange(View v, boolean hasFocus) {
                 showOpEditRemove = false;
-              }
-              MainHelper.invalidateOptionsMenu(WeekActivity.this);
+                MainHelper.invalidateOptionsMenu(WeekActivity.this);
             }
-          }
-        })
-        .setNegativeButton(android.R.string.no, null)
-        .show();
-  }
-
-  /** Called when the user clicks the Edit button */
-  @Override
-  protected void editButtonClick() {
-    // open
-    Intent myIntent = new Intent(WeekActivity.this, ShopActivity.class);
-    // myIntent.putExtra("week", weeks.getWeeks().get(listView.getCheckedItemPosition())); //Optional parameters
-    myIntent.putExtra("weekNo", listView.getCheckedItemPosition()); //Optional parameters
-    WeekActivity.this.startActivity(myIntent);
-  }
-
-  @Override
-  protected ArrayList<?> validateAndSortList(ArrayList<?> list) {
-    // sort by date desc
-    ArrayList<WeekListItem> l = (ArrayList<WeekListItem>) list;
-    Collections.sort(l, new Comparator<WeekListItem>() {
-      @Override
-      public int compare(WeekListItem lhs, WeekListItem rhs) {
-        if (rhs.getDateFrom() == null) {
-          return (lhs.getDateFrom() == null) ? 0 : 1;
-        }
-        return rhs.getDateFrom().compareTo(lhs.getDateFrom());
-      }
-    });
-    // remove duplicate
-    int lastWeek = 0;
-    int lastYear = 0;
-    Iterator<WeekListItem> it = l.iterator();
-    while (it.hasNext()) {
-      WeekListItem item = it.next();
-      if (item.getDateFrom() == null) {
-        it.remove();
-      } else {
+        });
+        new FileConnectionTask(WeekActivity.this, false, true).execute(getDownloadStorageDirPath() + "/" + basketFileName);
+    }
+
+    /**
+     * Called when the user clicks the Add button
+     */
+    public void addButtonClick() {
         Calendar cal = Calendar.getInstance();
-        cal.setTime(item.getDateFrom());
-        if (cal.get(Calendar.YEAR) != lastYear && cal.get(Calendar.WEEK_OF_YEAR) == lastWeek) {
-          it.remove();
-        } else {
-          lastWeek = cal.get(Calendar.WEEK_OF_YEAR);
-          lastYear = cal.get(Calendar.YEAR);
+        Dialog d = new DatePickerDialog(WeekActivity.this, new DatePickerDialog.OnDateSetListener() {
+            @Override
+            public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {
+                WeekListItem item = new WeekListItem("week", new GregorianCalendar(year, monthOfYear, dayOfMonth).getTime());
+                weeks.addWeek(item);
+                setWeeks(weeks);
+
+                listView.setItemChecked(findWeekIndexInList(weeks.getWeeks(), item), true);
+                showOpEditRemove = true;
+                MainHelper.invalidateOptionsMenu(WeekActivity.this);
+            }
+        },
+                cal.get(Calendar.YEAR), cal.get(Calendar.MONTH), cal.get(Calendar.DAY_OF_MONTH));
+        d.show();
+    }
+
+    /**
+     * Called when the user clicks the Remove button
+     */
+    @Override
+    protected void removeButtonClick() {
+        AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        builder.setMessage(R.string.are_u_sure)
+                .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialog, int which) {
+                        int i = listView.getCheckedItemPosition();
+                        if (i >= 0) {
+                            weeks.removeWeek(i);
+                            setWeeks(weeks);
+                            int size = weeks.getWeeks().size();
+                            if (size > 0) {
+                                if (i >= size) {
+                                    i = size - 1;
+                                }
+                                listView.setItemChecked(i, true);
+                                showOpEditRemove = true;
+                            } else {
+                                showOpEditRemove = false;
+                            }
+                            MainHelper.invalidateOptionsMenu(WeekActivity.this);
+                        }
+                    }
+                })
+                .setNegativeButton(android.R.string.no, null)
+                .show();
+    }
+
+    /**
+     * Called when the user clicks the Edit button
+     */
+    @Override
+    protected void editButtonClick() {
+        // open
+        Intent myIntent = new Intent(WeekActivity.this, ShopActivity.class);
+        // myIntent.putExtra("week", weeks.getWeeks().get(listView.getCheckedItemPosition())); //Optional parameters
+        myIntent.putExtra("weekNo", listView.getCheckedItemPosition()); //Optional parameters
+        WeekActivity.this.startActivity(myIntent);
+    }
+
+    @Override
+    protected ArrayList<?> validateAndSortList(ArrayList<?> list) {
+        // sort by date desc
+        ArrayList<WeekListItem> l = (ArrayList<WeekListItem>) list;
+        Collections.sort(l, new Comparator<WeekListItem>() {
+            @Override
+            public int compare(WeekListItem lhs, WeekListItem rhs) {
+                if (rhs.getDateFrom() == null) {
+                    return (lhs.getDateFrom() == null) ? 0 : 1;
+                }
+                return rhs.getDateFrom().compareTo(lhs.getDateFrom());
+            }
+        });
+        // remove duplicate
+        int lastWeek = 0;
+        int lastYear = 0;
+        Iterator<WeekListItem> it = l.iterator();
+        while (it.hasNext()) {
+            WeekListItem item = it.next();
+            if (item.getDateFrom() == null) {
+                it.remove();
+            } else {
+                Calendar cal = Calendar.getInstance();
+                cal.setTime(item.getDateFrom());
+                if (cal.get(Calendar.YEAR) != lastYear && cal.get(Calendar.WEEK_OF_YEAR) == lastWeek) {
+                    it.remove();
+                } else {
+                    lastWeek = cal.get(Calendar.WEEK_OF_YEAR);
+                    lastYear = cal.get(Calendar.YEAR);
+                }
+            }
         }
-      }
+        return list;
     }
-    return list;
-  }
 
 
-  private int findWeekIndexInList(ArrayList<WeekListItem> list, WeekListItem item) {
-    int index = list.indexOf(item);
+    private int findWeekIndexInList(ArrayList<WeekListItem> list, WeekListItem item) {
+        int index = list.indexOf(item);
 
-    if (index < 0) {
-      Calendar cal = Calendar.getInstance();
-      cal.setTime(item.getDateFrom());
-      int week = cal.get(Calendar.WEEK_OF_YEAR);
-      int year = cal.get(Calendar.YEAR);
+        if (index < 0) {
+            Calendar cal = Calendar.getInstance();
+            cal.setTime(item.getDateFrom());
+            int week = cal.get(Calendar.WEEK_OF_YEAR);
+            int year = cal.get(Calendar.YEAR);
 
-      for (int i = 0; i < list.size(); i++) {
-        cal.setTime(list.get(i).getDateFrom());
-        if (cal.get(Calendar.WEEK_OF_YEAR) == year && cal.get(Calendar.WEEK_OF_YEAR) == week) {
-          return i;
+            for (int i = 0; i < list.size(); i++) {
+                cal.setTime(list.get(i).getDateFrom());
+                if (cal.get(Calendar.WEEK_OF_YEAR) == year && cal.get(Calendar.WEEK_OF_YEAR) == week) {
+                    return i;
+                }
+            }
         }
-      }
+        return index;
     }
-    return index;
-  }
-
-  @Override
-  public boolean onCreateOptionsMenu(Menu menu) {
-    boolean res = super.onCreateOptionsMenu(menu);
-    if (res) {
-      for (int i = 0; i < menu.size(); i++) {
-        MenuItem mi = menu.getItem(i);
-        if ((mi.getItemId() == R.id.action_download) || (mi.getItemId() == R.id.action_upload)) {
-          mi.setVisible(true);
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        boolean res = super.onCreateOptionsMenu(menu);
+        if (res) {
+            for (int i = 0; i < menu.size(); i++) {
+                MenuItem mi = menu.getItem(i);
+                if ((mi.getItemId() == R.id.action_download) || (mi.getItemId() == R.id.action_upload)) {
+                    mi.setVisible(true);
+                }
+            }
         }
-      }
+        return res;
     }
-    return res;
-  }
-
-  @Override
-  public boolean onOptionsItemSelected(MenuItem item) {
-    // Handle item selection
-    switch (item.getItemId()) {
-      case R.id.action_upload:
-        new FileConnectionTask(WeekActivity.this,  true, false).execute(getDownloadStorageDirPath() + "/" + basketFileName);
-        return true;
-      case R.id.action_download:
-        new FileConnectionTask(WeekActivity.this, false, false).execute(getDownloadStorageDirPath() + "/" + basketFileName);
-        return true;
-      default:
-        return super.onOptionsItemSelected(item);
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // Handle item selection
+        switch (item.getItemId()) {
+            case R.id.action_upload:
+                new FileConnectionTask(WeekActivity.this, true, false).execute(getDownloadStorageDirPath() + "/" + basketFileName);
+                return true;
+            case R.id.action_download:
+                new FileConnectionTask(WeekActivity.this, false, false).execute(getDownloadStorageDirPath() + "/" + basketFileName);
+                return true;
+            default:
+                return super.onOptionsItemSelected(item);
+        }
     }
-  }
 
-  protected String getDownloadStorageDirPath() {
-    File file = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);
+    protected String getDownloadStorageDirPath() {
+        File file = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);
 
-    if (file.exists() || file.mkdirs()) {
-      return file.getAbsolutePath();
+        if (file.exists() || file.mkdirs()) {
+            return file.getAbsolutePath();
+        }
+        MainHelper.showCustomToast(WeekActivity.this, getString(R.string.err_dir_download), false);
+        return "";
     }
-    MainHelper.showCustomToast(WeekActivity.this, getString(R.string.err_dir_download), false);
-    return "";
-  }
 
 }
\ No newline at end of file
diff --git a/Basket/src/main/java/main/basket/dialogs/AddBasketItemDialog.java b/Basket/src/main/java/main/basket/dialogs/AddBasketItemDialog.java
index 0ffca11..431e541 100644
--- a/Basket/src/main/java/main/basket/dialogs/AddBasketItemDialog.java
+++ b/Basket/src/main/java/main/basket/dialogs/AddBasketItemDialog.java
@@ -15,101 +15,103 @@ import main.basket.R;
 import main.basket.helper.DecimalDigitsInputFilter;
 import main.basket.list.structure.BasketListItem;
 
-/** Created by martin on 28.7.13. */
+/**
+ * Created by martin on 28.7.13.
+ */
 public class AddBasketItemDialog extends Dialog implements android.view.View.OnClickListener {
 
-  protected Activity c;
-  protected Dialog d;
-  protected Button yes, no;
-  protected BasketListItem item;
-  protected OnClickListener okButtonListener = null;
+    protected Activity c;
+    protected Dialog d;
+    protected Button yes, no;
+    protected BasketListItem item;
+    protected OnClickListener okButtonListener = null;
 
-  public AddBasketItemDialog(Activity a, BasketListItem item, int theme) {
-    super(a, theme);
-    this.c = a;
-    this.item = item;
-  }
-
-  public BasketListItem getBasketItem() {
-    return item;
-  }
-
-  public void setBasketItem(BasketListItem item) {
-    this.item = item;
-  }
-
-  @Override
-  protected void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
-    setTitle((item == null) ? R.string.add_product : R.string.edit_product);
-    setContentView(R.layout.add_basket_item_dialog_layout);
-
-    yes = (Button) findViewById(R.id.btn_yes);
-    no = (Button) findViewById(R.id.btn_no);
-    TextView nameView = (TextView) findViewById(R.id.item_name_in);
-    TextView priceView = (TextView) findViewById(R.id.item_price_in);
+    public AddBasketItemDialog(Activity a, BasketListItem item, int theme) {
+        super(a, theme);
+        this.c = a;
+        this.item = item;
+    }
 
-    yes.setOnClickListener(this);
-    no.setOnClickListener(this);
-    if (item == null) {
-      item = new BasketListItem("", 0.0);
+    public BasketListItem getBasketItem() {
+        return item;
     }
-    nameView.setText(item.getHeadLine());
-    priceView.setFilters(new InputFilter[] {new DecimalDigitsInputFilter(5,2)});
-    priceView.setText(String.valueOf(item.getPrice()));
 
-    WindowManager.LayoutParams params = getWindow().getAttributes();
-    params.width = WindowManager.LayoutParams.MATCH_PARENT;
-    getWindow().setAttributes(params);
-  }
+    public void setBasketItem(BasketListItem item) {
+        this.item = item;
+    }
 
-  public void setPositiveButtonAction(final OnClickListener listener) {
-    okButtonListener = listener;
-  }
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setTitle((item == null) ? R.string.add_product : R.string.edit_product);
+        setContentView(R.layout.add_basket_item_dialog_layout);
 
-  @Override
-  public void onClick(View v) {
-    switch (v.getId()) {
-      case R.id.btn_yes:
+        yes = (Button) findViewById(R.id.btn_yes);
+        no = (Button) findViewById(R.id.btn_no);
         TextView nameView = (TextView) findViewById(R.id.item_name_in);
         TextView priceView = (TextView) findViewById(R.id.item_price_in);
 
-        String err = "";
-        try {
-          Double price = Double.valueOf(priceView.getText().toString());
-          if (nameView.getText().toString().trim().length() > 0) {
-            item.setHeadLine(nameView.getText().toString().trim());
-            item.setPrice(price);
-          } else {
-            err = getContext().getString(R.string.err_empty_product);
-          }
-        } catch (Exception e) {
-          err = getContext().getString(R.string.err_price_num);
+        yes.setOnClickListener(this);
+        no.setOnClickListener(this);
+        if (item == null) {
+            item = new BasketListItem("", 0.0);
         }
-        if (err.length() > 0) {
-          new AlertDialog.Builder(c)
-              .setTitle(R.string.error)
-              .setMessage(err)
-              .setIcon(android.R.drawable.stat_notify_error)
-              .setPositiveButton(android.R.string.ok,
-                  new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog,
-                                        int which) {
-                      dialog.dismiss();
+        nameView.setText(item.getHeadLine());
+        priceView.setFilters(new InputFilter[]{new DecimalDigitsInputFilter(5, 2)});
+        priceView.setText(String.valueOf(item.getPrice()));
+
+        WindowManager.LayoutParams params = getWindow().getAttributes();
+        params.width = WindowManager.LayoutParams.MATCH_PARENT;
+        getWindow().setAttributes(params);
+    }
+
+    public void setPositiveButtonAction(final OnClickListener listener) {
+        okButtonListener = listener;
+    }
+
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()) {
+            case R.id.btn_yes:
+                TextView nameView = (TextView) findViewById(R.id.item_name_in);
+                TextView priceView = (TextView) findViewById(R.id.item_price_in);
+
+                String err = "";
+                try {
+                    Double price = Double.valueOf(priceView.getText().toString());
+                    if (nameView.getText().toString().trim().length() > 0) {
+                        item.setHeadLine(nameView.getText().toString().trim());
+                        item.setPrice(price);
+                    } else {
+                        err = getContext().getString(R.string.err_empty_product);
+                    }
+                } catch (Exception e) {
+                    err = getContext().getString(R.string.err_price_num);
+                }
+                if (err.length() > 0) {
+                    new AlertDialog.Builder(c)
+                            .setTitle(R.string.error)
+                            .setMessage(err)
+                            .setIcon(android.R.drawable.stat_notify_error)
+                            .setPositiveButton(android.R.string.ok,
+                                    new DialogInterface.OnClickListener() {
+                                        @Override
+                                        public void onClick(DialogInterface dialog,
+                                                            int which) {
+                                            dialog.dismiss();
+                                        }
+                                    })
+                            .show();
+                } else {
+                    if (okButtonListener != null) {
+                        okButtonListener.onClick(this, v.getId());
                     }
-                  })
-              .show();
-        } else {
-          if (okButtonListener != null) {
-            okButtonListener.onClick(this, v.getId());
-          }
-          dismiss();
+                    dismiss();
+                }
+                break;
+            default:
+                dismiss();
         }
-        break;
-      default:
-        dismiss();
     }
-  }
 
 }
\ No newline at end of file
diff --git a/Basket/src/main/java/main/basket/enums/ShopsEnum.java b/Basket/src/main/java/main/basket/enums/ShopsEnum.java
index 369f1a8..2e3346a 100644
--- a/Basket/src/main/java/main/basket/enums/ShopsEnum.java
+++ b/Basket/src/main/java/main/basket/enums/ShopsEnum.java
@@ -1,42 +1,50 @@
 package main.basket.enums;
 
 import java.util.Calendar;
+
 import main.basket.R;
 
-/** Created by martin on 28.7.13. */
+/**
+ * Created by martin on 28.7.13.
+ */
 public enum ShopsEnum {
 
-  SHOP_INTERSPAR("Interspar", R.drawable.interspar, Calendar.WEDNESDAY),
-  SHOP_TESCO(    "Tesco",     R.drawable.tesco,     Calendar.WEDNESDAY),
-  SHOP_BILLA(    "Billa",     R.drawable.billa,     Calendar.WEDNESDAY),
-  SHOP_ALBERT(   "Albert",    R.drawable.albert,    Calendar.WEDNESDAY),
-  SHOP_LIDL(     "Lidl",      R.drawable.lidl,      Calendar.MONDAY),
-  SHOP_KAUFLAND( "Kaufland",  R.drawable.kaufland,  Calendar.THURSDAY);
-
-  private String name;
-  private int iconId;
-  private int beggingDay;
-
-  ShopsEnum(String name, int iconId, int beggingDay) {
-    this.name = name;
-    this.iconId = iconId;
-    this.beggingDay = beggingDay;
-  }
-
-  public String getName() {
-    return name;
-  }
-
-  public int getIconId() {
-    return iconId;
-  }
-
-  public int getBeggingDay() {
-    return beggingDay;
-  }
-
-  @Override
-  public String toString() {
-    return name;
-  }
+    SHOP_INTERSPAR("Interspar", R.drawable.interspar, Calendar.WEDNESDAY),
+    SHOP_TESCO("Tesco", R.drawable.tesco, Calendar.WEDNESDAY),
+    SHOP_BILLA("Billa", R.drawable.billa, Calendar.WEDNESDAY),
+    SHOP_ALBERT("Albert", R.drawable.albert, Calendar.WEDNESDAY),
+    SHOP_LIDL("Lidl", R.drawable.lidl, Calendar.MONDAY),
+    SHOP_KAUFLAND("Kaufland", R.drawable.kaufland, Calendar.THURSDAY),
+    SHOP_OTHER("Other", R.drawable.other, Calendar.MONDAY);
+
+    private String name;
+    private int iconId;
+    private int beggingDay;
+
+    ShopsEnum(String name, int iconId, int beggingDay) {
+        this.name = name;
+        this.iconId = iconId;
+        this.beggingDay = beggingDay;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public int getIconId() {
+        return iconId;
+    }
+
+    public int getBeggingDay() {
+        return beggingDay;
+    }
+
+    @Override
+    public String toString() {
+        return name;
+    }
 }
diff --git a/Basket/src/main/java/main/basket/helper/DecimalDigitsInputFilter.java b/Basket/src/main/java/main/basket/helper/DecimalDigitsInputFilter.java
index 8db44e7..d4d853e 100644
--- a/Basket/src/main/java/main/basket/helper/DecimalDigitsInputFilter.java
+++ b/Basket/src/main/java/main/basket/helper/DecimalDigitsInputFilter.java
@@ -6,21 +6,23 @@ import android.text.Spanned;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
-/** Created by martin on 30.7.13. */
+/**
+ * Created by martin on 30.7.13.
+ */
 public class DecimalDigitsInputFilter implements InputFilter {
 
-  Pattern mPattern;
+    Pattern mPattern;
 
-  public DecimalDigitsInputFilter(int digitsBeforeZero,int digitsAfterZero) {
-    mPattern=Pattern.compile("[0-9]{0," + (digitsBeforeZero-1) + "}(((\\.[0-9]{0," + (digitsAfterZero-1) + "})?)||(\\.)?)?");
-  }
+    public DecimalDigitsInputFilter(int digitsBeforeZero, int digitsAfterZero) {
+        mPattern = Pattern.compile("[0-9]{0," + (digitsBeforeZero - 1) + "}(((\\.[0-9]{0," + (digitsAfterZero - 1) + "})?)||(\\.)?)?");
+    }
 
-  @Override
-  public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
-    Matcher matcher = mPattern.matcher(dest);
-    if (!matcher.matches())
-      return "";
-    return null;
-  }
+    @Override
+    public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend) {
+        Matcher matcher = mPattern.matcher(dest);
+        if (!matcher.matches())
+            return "";
+        return null;
+    }
 
 }
\ No newline at end of file
diff --git a/Basket/src/main/java/main/basket/helper/MainHelper.java b/Basket/src/main/java/main/basket/helper/MainHelper.java
index f525e84..fbbf7ce 100644
--- a/Basket/src/main/java/main/basket/helper/MainHelper.java
+++ b/Basket/src/main/java/main/basket/helper/MainHelper.java
@@ -13,48 +13,50 @@ import android.widget.Toast;
 
 import main.basket.R;
 
-/** Created by martin on 28.7.13. */
+/**
+ * Created by martin on 28.7.13.
+ */
 public class MainHelper {
 
-  public static boolean invalidateOptionsMenu(Activity activity) {
-    if (Build.VERSION.SDK_INT >= 11) {
-      activity.invalidateOptionsMenu();
-      return true;
+    public static boolean invalidateOptionsMenu(Activity activity) {
+        if (Build.VERSION.SDK_INT >= 11) {
+            activity.invalidateOptionsMenu();
+            return true;
+        }
+        return false;
     }
-    return false;
-  }
-
-  public static void showCustomToast(Activity srcActivity, String msg, boolean ok) {
-    showCustomToast(srcActivity, "", msg, ok);
-  }
-
-  public static void showCustomToast(Activity srcActivity, String msgFirst, String msg, boolean ok) {
-    LayoutInflater inflater = srcActivity.getLayoutInflater();
-    View layout = inflater.inflate(R.layout.custom_toast,
-        (ViewGroup) srcActivity.findViewById(R.id.toast_layout_root));
-
-    ImageView img = (ImageView) layout.findViewById(R.id.image);
-    img.setImageResource((ok) ? R.drawable.ic_thumb_up : R.drawable.ic_thumb_down);
-
-    TextView text = (TextView) layout.findViewById(R.id.text);
-    text.setText(msg);
-
-    TextView textFirst = (TextView) layout.findViewById(R.id.text_first);
-    if (msgFirst == null || msgFirst.isEmpty()) {
-      textFirst.setVisibility(View.GONE);
-      textFirst.setText("");
-    } else {
-      textFirst.setVisibility(View.VISIBLE);
-      textFirst.setText(msgFirst);
-      if (ok == false) {
-        text.setTextColor(Color.rgb(255, 48, 48));
-      }
+
+    public static void showCustomToast(Activity srcActivity, String msg, boolean ok) {
+        showCustomToast(srcActivity, "", msg, ok);
     }
 
-    Toast toast = new Toast(srcActivity);
-    toast.setDuration(Toast.LENGTH_LONG);
-    toast.setView(layout);
-    toast.show();
-  }
+    public static void showCustomToast(Activity srcActivity, String msgFirst, String msg, boolean ok) {
+        LayoutInflater inflater = srcActivity.getLayoutInflater();
+        View layout = inflater.inflate(R.layout.custom_toast,
+                (ViewGroup) srcActivity.findViewById(R.id.toast_layout_root));
+
+        ImageView img = (ImageView) layout.findViewById(R.id.image);
+        img.setImageResource((ok) ? R.drawable.ic_thumb_up : R.drawable.ic_thumb_down);
+
+        TextView text = (TextView) layout.findViewById(R.id.text);
+        text.setText(msg);
+
+        TextView textFirst = (TextView) layout.findViewById(R.id.text_first);
+        if (msgFirst == null || msgFirst.isEmpty()) {
+            textFirst.setVisibility(View.GONE);
+            textFirst.setText("");
+        } else {
+            textFirst.setVisibility(View.VISIBLE);
+            textFirst.setText(msgFirst);
+            if (ok == false) {
+                text.setTextColor(Color.rgb(255, 48, 48));
+            }
+        }
+
+        Toast toast = new Toast(srcActivity);
+        toast.setDuration(Toast.LENGTH_LONG);
+        toast.setView(layout);
+        toast.show();
+    }
 
 }
diff --git a/Basket/src/main/java/main/basket/list/BaseListAdapter.java b/Basket/src/main/java/main/basket/list/BaseListAdapter.java
index 1cce1c4..eb7efba 100644
--- a/Basket/src/main/java/main/basket/list/BaseListAdapter.java
+++ b/Basket/src/main/java/main/basket/list/BaseListAdapter.java
@@ -9,44 +9,46 @@ import android.widget.BaseAdapter;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 
-/** Created by martin on 27.7.13. */
+/**
+ * Created by martin on 27.7.13.
+ */
 public abstract class BaseListAdapter extends BaseAdapter {
 
-  protected ArrayList<?> listData;
-  protected Context context;
-  protected LayoutInflater layoutInflater;
-  protected SimpleDateFormat df = new SimpleDateFormat("dd. MMM yy");
-
-  public BaseListAdapter(Context context, ArrayList<?> listData) {
-    this.listData = listData;
-    this.context = context;
-    layoutInflater = LayoutInflater.from(context);
-  }
-
-  @Override
-  public int getCount() {
-    return listData.size();
-  }
-
-  @Override
-  public Object getItem(int position) {
-    return listData.get(position);
-  }
-
-  @Override
-  public long getItemId(int position) {
-    return position;
-  }
-
-  public ArrayList<?> getListData() {
-    return listData;
-  }
-
-  public void setListData(ArrayList<?> listData) {
-    this.listData = listData;
-  }
-
-  @Override
-  public abstract View getView(int position, View convertView, ViewGroup parent);
+    protected ArrayList<?> listData;
+    protected Context context;
+    protected LayoutInflater layoutInflater;
+    protected SimpleDateFormat df = new SimpleDateFormat("dd. MMM yy");
+
+    public BaseListAdapter(Context context, ArrayList<?> listData) {
+        this.listData = listData;
+        this.context = context;
+        layoutInflater = LayoutInflater.from(context);
+    }
+
+    @Override
+    public int getCount() {
+        return listData.size();
+    }
+
+    @Override
+    public Object getItem(int position) {
+        return listData.get(position);
+    }
+
+    @Override
+    public long getItemId(int position) {
+        return position;
+    }
+
+    public ArrayList<?> getListData() {
+        return listData;
+    }
+
+    public void setListData(ArrayList<?> listData) {
+        this.listData = listData;
+    }
+
+    @Override
+    public abstract View getView(int position, View convertView, ViewGroup parent);
 
 }
\ No newline at end of file
diff --git a/Basket/src/main/java/main/basket/list/ShopEnumListAdapter.java b/Basket/src/main/java/main/basket/list/ShopEnumListAdapter.java
index a6c995b..48d88fc 100644
--- a/Basket/src/main/java/main/basket/list/ShopEnumListAdapter.java
+++ b/Basket/src/main/java/main/basket/list/ShopEnumListAdapter.java
@@ -12,39 +12,41 @@ import java.util.ArrayList;
 import main.basket.R;
 import main.basket.enums.ShopsEnum;
 
-/** Created by martin on 27.7.13. */
+/**
+ * Created by martin on 27.7.13.
+ */
 public class ShopEnumListAdapter extends BaseListAdapter {
 
-  public ShopEnumListAdapter(Context context, ArrayList<ShopsEnum> listData) {
-    super(context, listData);
-  }
-
-  @Override
-  public View getView(int position, View convertView, ViewGroup parent) {
-    ViewHolder holder;
-    if (convertView == null) {
-      convertView = layoutInflater.inflate(R.layout.shop_enum_row_list_view_layout, null);
-      holder = new ViewHolder();
-      holder.iconView      = (ImageView) convertView.findViewById(R.id.shop_icon);
-      holder.headlineView  = (TextView)  convertView.findViewById(R.id.title);
-      convertView.setTag(holder);
-    } else {
-      holder = (ViewHolder) convertView.getTag();
+    public ShopEnumListAdapter(Context context, ArrayList<ShopsEnum> listData) {
+        super(context, listData);
     }
 
-    ShopsEnum item = (ShopsEnum) listData.get(position);
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        ViewHolder holder;
+        if (convertView == null) {
+            convertView = layoutInflater.inflate(R.layout.shop_enum_row_list_view_layout, null);
+            holder = new ViewHolder();
+            holder.iconView = (ImageView) convertView.findViewById(R.id.shop_icon);
+            holder.headlineView = (TextView) convertView.findViewById(R.id.title);
+            convertView.setTag(holder);
+        } else {
+            holder = (ViewHolder) convertView.getTag();
+        }
 
-    Resources res = layoutInflater.getContext().getResources();
+        ShopsEnum item = (ShopsEnum) listData.get(position);
 
-    holder.iconView.setImageDrawable(res.getDrawable(item.getIconId()));
-    holder.headlineView.setText(item.getName());
+        Resources res = layoutInflater.getContext().getResources();
 
-    return convertView;
-  }
+        holder.iconView.setImageDrawable(res.getDrawable(item.getIconId()));
+        holder.headlineView.setText(item.getName());
 
-  static class ViewHolder {
-    ImageView iconView;
-    TextView headlineView;
-  }
+        return convertView;
+    }
+
+    static class ViewHolder {
+        ImageView iconView;
+        TextView headlineView;
+    }
 
 }
\ No newline at end of file
diff --git a/Basket/src/main/java/main/basket/list/ShopListAdapter.java b/Basket/src/main/java/main/basket/list/ShopListAdapter.java
index da8364f..aed0281 100644
--- a/Basket/src/main/java/main/basket/list/ShopListAdapter.java
+++ b/Basket/src/main/java/main/basket/list/ShopListAdapter.java
@@ -13,55 +13,57 @@ import java.util.Calendar;
 import main.basket.R;
 import main.basket.list.structure.ShopListItem;
 
-/** Created by martin on 27.7.13. */
+/**
+ * Created by martin on 27.7.13.
+ */
 public class ShopListAdapter extends BaseListAdapter {
 
-  public ShopListAdapter(Context context, ArrayList<ShopListItem> listData) {
-    super(context, listData);
-  }
-
-  public View getView(int position, View convertView, ViewGroup parent) {
-    ViewHolder holder;
-    if (convertView == null) {
-      convertView = layoutInflater.inflate(R.layout.shop_row_list_view_layout, null);
-      holder = new ViewHolder();
-      holder.iconView      = (ImageView) convertView.findViewById(R.id.shop_icon);
-      holder.headlineView  = (TextView)  convertView.findViewById(R.id.title);
-      holder.itemCountView = (TextView)  convertView.findViewById(R.id.item_count);
-      holder.dateView      = (TextView)  convertView.findViewById(R.id.date);
-      convertView.setTag(holder);
-    } else {
-      holder = (ViewHolder) convertView.getTag();
+    public ShopListAdapter(Context context, ArrayList<ShopListItem> listData) {
+        super(context, listData);
     }
 
-    ShopListItem item = (ShopListItem) listData.get(position);
+    public View getView(int position, View convertView, ViewGroup parent) {
+        ViewHolder holder;
+        if (convertView == null) {
+            convertView = layoutInflater.inflate(R.layout.shop_row_list_view_layout, null);
+            holder = new ViewHolder();
+            holder.iconView = (ImageView) convertView.findViewById(R.id.shop_icon);
+            holder.headlineView = (TextView) convertView.findViewById(R.id.title);
+            holder.itemCountView = (TextView) convertView.findViewById(R.id.item_count);
+            holder.dateView = (TextView) convertView.findViewById(R.id.date);
+            convertView.setTag(holder);
+        } else {
+            holder = (ViewHolder) convertView.getTag();
+        }
 
-    if (item.getDateFrom() == null)
-      return convertView;
-      // set the end date
-    if (item.getDateTo() == null) {
-      // and add six days
-      Calendar cal = Calendar.getInstance();
-      cal.setTime(item.getDateFrom());
-      cal.add(Calendar.DAY_OF_YEAR, 6);
-      item.setDateTo(cal.getTime());
-    }
+        ShopListItem item = (ShopListItem) listData.get(position);
 
-    Resources res = layoutInflater.getContext().getResources();
+        if (item.getDateFrom() == null)
+            return convertView;
+        // set the end date
+        if (item.getDateTo() == null) {
+            // and add six days
+            Calendar cal = Calendar.getInstance();
+            cal.setTime(item.getDateFrom());
+            cal.add(Calendar.DAY_OF_YEAR, 6);
+            item.setDateTo(cal.getTime());
+        }
 
-    holder.iconView.setImageDrawable(res.getDrawable(item.getShop().getIconId()));
-    holder.headlineView.setText(item.getHeadLine());
-    holder.itemCountView.setText(res.getString(R.string.items_label) + ": " + ((item.getSubItemCount() >= 0) ? item.getSubItemCount() : 0));
-    holder.dateView.setText(df.format(item.getDateFrom().getTime()) + " - " + df.format(item.getDateTo().getTime()));
+        Resources res = layoutInflater.getContext().getResources();
 
-    return convertView;
-  }
+        holder.iconView.setImageDrawable(res.getDrawable(item.getShop().getIconId()));
+        holder.headlineView.setText(item.getHeadLine());
+        holder.itemCountView.setText(res.getString(R.string.items_label) + ": " + ((item.getSubItemCount() >= 0) ? item.getSubItemCount() : 0));
+        holder.dateView.setText(df.format(item.getDateFrom().getTime()) + " - " + df.format(item.getDateTo().getTime()));
 
-  static class ViewHolder {
-    ImageView iconView;
-    TextView headlineView;
-    TextView itemCountView;
-    TextView dateView;
-  }
+        return convertView;
+    }
+
+    static class ViewHolder {
+        ImageView iconView;
+        TextView headlineView;
+        TextView itemCountView;
+        TextView dateView;
+    }
 
 }
\ No newline at end of file
diff --git a/Basket/src/main/java/main/basket/list/WeekListAdapter.java b/Basket/src/main/java/main/basket/list/WeekListAdapter.java
index 52c394c..bc45664 100644
--- a/Basket/src/main/java/main/basket/list/WeekListAdapter.java
+++ b/Basket/src/main/java/main/basket/list/WeekListAdapter.java
@@ -12,62 +12,64 @@ import java.util.Calendar;
 import main.basket.R;
 import main.basket.list.structure.WeekListItem;
 
-/** Created by martin on 27.7.13. */
+/**
+ * Created by martin on 27.7.13.
+ */
 public class WeekListAdapter extends BaseListAdapter {
 
-  public WeekListAdapter(Context context, ArrayList<WeekListItem> listData) {
-    super(context, listData);
-  }
-
-  @Override
-  public View getView(int position, View convertView, ViewGroup parent) {
-    ViewHolder holder;
-    if (convertView == null) {
-      convertView = layoutInflater.inflate(R.layout.week_row_list_view_layout, null);
-      holder = new ViewHolder();
-      holder.headlineView  = (TextView) convertView.findViewById(R.id.title);
-      holder.itemCountView = (TextView) convertView.findViewById(R.id.item_count);
-      holder.dateView      = (TextView) convertView.findViewById(R.id.date);
-      convertView.setTag(holder);
-    } else {
-      holder = (ViewHolder) convertView.getTag();
+    public WeekListAdapter(Context context, ArrayList<WeekListItem> listData) {
+        super(context, listData);
     }
 
-    WeekListItem item = (WeekListItem) listData.get(position);
-
-    if (item.getDateFrom() == null)
-      return convertView;
-    // set the date
-    Calendar cal = Calendar.getInstance();
-    cal.setTime(item.getDateFrom());
-
-    Resources res = layoutInflater.getContext().getResources();
-
-    item.setHeadLine(cal.get(Calendar.WEEK_OF_YEAR) + ". " + res.getString(R.string.week_label));
-
-    holder.headlineView.setText(item.getHeadLine());
-    holder.itemCountView.setText(res.getString(R.string.shops_label) + ": "
-                                 + ((item.getSubItemCount() >= 0) ? item.getSubItemCount() : 0));
-
-    // "calculate" the start date of the week
-    Calendar first = (Calendar) cal.clone();
-    first.add(Calendar.DAY_OF_WEEK, first.getFirstDayOfWeek() - first.get(Calendar.DAY_OF_WEEK));
-    // and add six days to the end date
-    Calendar last = (Calendar) first.clone();
-    last.add(Calendar.DAY_OF_YEAR, 6);
-
-    item.setDateFrom(first.getTime());
-    item.setDateTo(last.getTime());
-
-    holder.dateView.setText(df.format(first.getTime()) + " - " + df.format(last.getTime()));
-
-    return convertView;
-  }
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        ViewHolder holder;
+        if (convertView == null) {
+            convertView = layoutInflater.inflate(R.layout.week_row_list_view_layout, null);
+            holder = new ViewHolder();
+            holder.headlineView = (TextView) convertView.findViewById(R.id.title);
+            holder.itemCountView = (TextView) convertView.findViewById(R.id.item_count);
+            holder.dateView = (TextView) convertView.findViewById(R.id.date);
+            convertView.setTag(holder);
+        } else {
+            holder = (ViewHolder) convertView.getTag();
+        }
+
+        WeekListItem item = (WeekListItem) listData.get(position);
+
+        if (item.getDateFrom() == null)
+            return convertView;
+        // set the date
+        Calendar cal = Calendar.getInstance();
+        cal.setTime(item.getDateFrom());
+
+        Resources res = layoutInflater.getContext().getResources();
+
+        item.setHeadLine(cal.get(Calendar.WEEK_OF_YEAR) + ". " + res.getString(R.string.week_label));
+
+        holder.headlineView.setText(item.getHeadLine());
+        holder.itemCountView.setText(res.getString(R.string.shops_label) + ": "
+                + ((item.getSubItemCount() >= 0) ? item.getSubItemCount() : 0));
+
+        // "calculate" the start date of the week
+        Calendar first = (Calendar) cal.clone();
+        first.add(Calendar.DAY_OF_WEEK, first.getFirstDayOfWeek() - first.get(Calendar.DAY_OF_WEEK));
+        // and add six days to the end date
+        Calendar last = (Calendar) first.clone();
+        last.add(Calendar.DAY_OF_YEAR, 6);
+
+        item.setDateFrom(first.getTime());
+        item.setDateTo(last.getTime());
+
+        holder.dateView.setText(df.format(first.getTime()) + " - " + df.format(last.getTime()));
+
+        return convertView;
+    }
 
-  static class ViewHolder {
-    TextView headlineView;
-    TextView itemCountView;
-    TextView dateView;
-  }
+    static class ViewHolder {
+        TextView headlineView;
+        TextView itemCountView;
+        TextView dateView;
+    }
 
 }
\ No newline at end of file
diff --git a/Basket/src/main/java/main/basket/list/structure/BasketListItem.java b/Basket/src/main/java/main/basket/list/structure/BasketListItem.java
index 85aeebc..52eb830 100644
--- a/Basket/src/main/java/main/basket/list/structure/BasketListItem.java
+++ b/Basket/src/main/java/main/basket/list/structure/BasketListItem.java
@@ -1,39 +1,41 @@
 package main.basket.list.structure;
 
-/** Created by martin on 29.7.13. */
+/**
+ * Created by martin on 29.7.13.
+ */
 public class BasketListItem extends CommonListItem {
 
-  protected double price;
-  protected boolean buyed;
+    protected double price;
+    protected boolean buyed;
 
-  public BasketListItem(String name, double price) {
-    this(name, price, false);
-  }
+    public BasketListItem(String name, double price) {
+        this(name, price, false);
+    }
 
-  public BasketListItem(String name, double price, boolean buyed) {
-    super(name, "");
-    this.price = (price < 0.0) ? 0.0 : price;
-    this.buyed = buyed;
-  }
+    public BasketListItem(String name, double price, boolean buyed) {
+        super(name, "");
+        this.price = (price < 0.0) ? 0.0 : price;
+        this.buyed = buyed;
+    }
 
-  public double getPrice() {
-    return price;
-  }
+    public double getPrice() {
+        return price;
+    }
 
-  public void setPrice(double price) {
-    this.price = price;
-  }
+    public void setPrice(double price) {
+        this.price = price;
+    }
 
-  public boolean isBuyed() {
-    return buyed;
-  }
+    public boolean isBuyed() {
+        return buyed;
+    }
 
-  public void setBuyed(boolean buyed) {
-    this.buyed = buyed;
-  }
+    public void setBuyed(boolean buyed) {
+        this.buyed = buyed;
+    }
 
-  @Override
-  public int getSubItemCount() {
-    return -1;
-  }
+    @Override
+    public int getSubItemCount() {
+        return -1;
+    }
 }
diff --git a/Basket/src/main/java/main/basket/list/structure/CommonListItem.java b/Basket/src/main/java/main/basket/list/structure/CommonListItem.java
index a084b53..f03b901 100644
--- a/Basket/src/main/java/main/basket/list/structure/CommonListItem.java
+++ b/Basket/src/main/java/main/basket/list/structure/CommonListItem.java
@@ -3,81 +3,83 @@ package main.basket.list.structure;
 import java.io.Serializable;
 import java.util.Date;
 
-/** Created by martin on 27.7.13. */
+/**
+ * Created by martin on 27.7.13.
+ */
 public abstract class CommonListItem implements Serializable {
 
-  protected String headLine;
-  protected Date dateFrom   = null;    // if null then not used
-  protected Date dateTo     = null;    // if null then not used
-  protected String footLine = "";      // if empty then not used
-
-  public CommonListItem(String headLine, int subItemCount, Date dateFrom, Date dateTo) {
-    this.headLine = headLine;
-    this.dateFrom = dateFrom;
-    this.dateTo = dateTo;
-  }
-
-  public CommonListItem(String headLine, Date dateFrom) {
-    this.headLine = headLine;
-    this.dateFrom = dateFrom;
-  }
-
-  public CommonListItem(String headLine) {
-    this.headLine = headLine;
-  }
-
-  public CommonListItem(String headLine, String footLine) {
-    this.headLine = headLine;
-    this.footLine = footLine;
-  }
-
-  public String getHeadLine() {
-    return headLine;
-  }
-
-  public void setHeadLine(String headLine) {
-    this.headLine = headLine;
-  }
-
-  public String getFootLine() {
-    return footLine;
-  }
-
-  public void setFootLine(String footLine) {
-    this.footLine = footLine;
-  }
-
-  public abstract int getSubItemCount();
-
-  public Date getDateFrom() {
-    return dateFrom;
-  }
-
-  public void setDateFrom(Date dateFrom) {
-    this.dateFrom = dateFrom;
-  }
-
-  public Date getDateTo() {
-    return dateTo;
-  }
-
-  public void setDateTo(Date dateTo) {
-    this.dateTo = dateTo;
-  }
-
-  @Override
-  public String toString() {
-    String res = "[" + "headLine='" + headLine + '\'';
-    if (footLine != "") {
-      res += ", footLine='" + footLine + '\'';
-    } else {
-      if (dateFrom != null) {
-        res += ", dateFrom=" + dateFrom;
-      }
-      if (dateTo != null) {
-        res += ", dateTo=" + dateTo;
-      }
+    protected String headLine;
+    protected Date dateFrom = null;    // if null then not used
+    protected Date dateTo = null;    // if null then not used
+    protected String footLine = "";      // if empty then not used
+
+    public CommonListItem(String headLine, int subItemCount, Date dateFrom, Date dateTo) {
+        this.headLine = headLine;
+        this.dateFrom = dateFrom;
+        this.dateTo = dateTo;
+    }
+
+    public CommonListItem(String headLine, Date dateFrom) {
+        this.headLine = headLine;
+        this.dateFrom = dateFrom;
+    }
+
+    public CommonListItem(String headLine) {
+        this.headLine = headLine;
+    }
+
+    public CommonListItem(String headLine, String footLine) {
+        this.headLine = headLine;
+        this.footLine = footLine;
+    }
+
+    public String getHeadLine() {
+        return headLine;
+    }
+
+    public void setHeadLine(String headLine) {
+        this.headLine = headLine;
+    }
+
+    public String getFootLine() {
+        return footLine;
+    }
+
+    public void setFootLine(String footLine) {
+        this.footLine = footLine;
+    }
+
+    public abstract int getSubItemCount();
+
+    public Date getDateFrom() {
+        return dateFrom;
+    }
+
+    public void setDateFrom(Date dateFrom) {
+        this.dateFrom = dateFrom;
+    }
+
+    public Date getDateTo() {
+        return dateTo;
+    }
+
+    public void setDateTo(Date dateTo) {
+        this.dateTo = dateTo;
+    }
+
+    @Override
+    public String toString() {
+        String res = "[" + "headLine='" + headLine + '\'';
+        if (footLine != "") {
+            res += ", footLine='" + footLine + '\'';
+        } else {
+            if (dateFrom != null) {
+                res += ", dateFrom=" + dateFrom;
+            }
+            if (dateTo != null) {
+                res += ", dateTo=" + dateTo;
+            }
+        }
+        return res + ']';
     }
-    return res +']';
-  }
 }
diff --git a/Basket/src/main/java/main/basket/list/structure/ShopListItem.java b/Basket/src/main/java/main/basket/list/structure/ShopListItem.java
index 28f3ae4..f1768e0 100644
--- a/Basket/src/main/java/main/basket/list/structure/ShopListItem.java
+++ b/Basket/src/main/java/main/basket/list/structure/ShopListItem.java
@@ -6,53 +6,55 @@ import java.util.Date;
 
 import main.basket.enums.ShopsEnum;
 
-/** Created by martin on 28.7.13. */
+/**
+ * Created by martin on 28.7.13.
+ */
 public class ShopListItem extends CommonListItem implements Serializable {
 
-  protected ShopsEnum shop = null;
-  protected ArrayList<BasketListItem> basket;
+    protected ShopsEnum shop = null;
+    protected ArrayList<BasketListItem> basket;
 
-  public ShopListItem(ShopsEnum shop, Date dateFrom, Date dateTo) {
-    this(shop, null, dateFrom, dateTo);
-  }
+    public ShopListItem(ShopsEnum shop, Date dateFrom, Date dateTo) {
+        this(shop, null, dateFrom, dateTo);
+    }
 
-  public ShopListItem(ShopsEnum shop, ArrayList<BasketListItem> basket, Date dateFrom, Date dateTo) {
-    super(shop.getName(), ((basket != null) ? basket.size() : 0), dateFrom, dateTo);
-    this.shop = shop;
-    this.basket = (basket != null) ? basket : new ArrayList<BasketListItem>();
-  }
+    public ShopListItem(ShopsEnum shop, ArrayList<BasketListItem> basket, Date dateFrom, Date dateTo) {
+        super(shop.getName(), ((basket != null) ? basket.size() : 0), dateFrom, dateTo);
+        this.shop = shop;
+        this.basket = (basket != null) ? basket : new ArrayList<BasketListItem>();
+    }
 
-  public ShopsEnum getShop() {
-    return shop;
-  }
+    public ShopsEnum getShop() {
+        return shop;
+    }
 
-  public void setShop(ShopsEnum shop) {
-    this.shop = shop;
-  }
+    public void setShop(ShopsEnum shop) {
+        this.shop = shop;
+    }
 
-  public ArrayList<BasketListItem> getBasket() {
-    return basket;
-  }
+    public ArrayList<BasketListItem> getBasket() {
+        return basket;
+    }
 
-  public void setBasket(ArrayList<BasketListItem> basket) {
-    this.basket = basket;
-  }
+    public void setBasket(ArrayList<BasketListItem> basket) {
+        this.basket = basket;
+    }
 
 
-  public boolean addBasketItem(BasketListItem item) {
-    return basket.add(item);
-  }
+    public boolean addBasketItem(BasketListItem item) {
+        return basket.add(item);
+    }
 
-  public boolean removeBasketItem(BasketListItem item) {
-    return basket.remove(item);
-  }
+    public boolean removeBasketItem(BasketListItem item) {
+        return basket.remove(item);
+    }
 
-  public BasketListItem removeBasketItem(int index) {
-    return basket.remove(index);
-  }
+    public BasketListItem removeBasketItem(int index) {
+        return basket.remove(index);
+    }
 
-  @Override
-  public int getSubItemCount() {
-    return (basket != null) ? basket.size() : 0;
-  }
+    @Override
+    public int getSubItemCount() {
+        return (basket != null) ? basket.size() : 0;
+    }
 }
diff --git a/Basket/src/main/java/main/basket/list/structure/StructureWrapper.java b/Basket/src/main/java/main/basket/list/structure/StructureWrapper.java
index ac9f947..336f416 100644
--- a/Basket/src/main/java/main/basket/list/structure/StructureWrapper.java
+++ b/Basket/src/main/java/main/basket/list/structure/StructureWrapper.java
@@ -3,37 +3,39 @@ package main.basket.list.structure;
 import java.io.Serializable;
 import java.util.ArrayList;
 
-/** Created by martin on 6.8.13. */
+/**
+ * Created by martin on 6.8.13.
+ */
 public class StructureWrapper implements Serializable {
 
-  protected ArrayList<WeekListItem> weeks;
+    protected ArrayList<WeekListItem> weeks;
 
-  public StructureWrapper() {
-    this(null);
-  }
+    public StructureWrapper() {
+        this(null);
+    }
 
-  public StructureWrapper(ArrayList<WeekListItem> weeks) {
-    this.weeks =  (weeks == null) ? new ArrayList<WeekListItem>() : weeks;
-  }
+    public StructureWrapper(ArrayList<WeekListItem> weeks) {
+        this.weeks = (weeks == null) ? new ArrayList<WeekListItem>() : weeks;
+    }
 
-  public ArrayList<WeekListItem> getWeeks() {
-    return weeks;
-  }
+    public ArrayList<WeekListItem> getWeeks() {
+        return weeks;
+    }
 
-  public void setWeeks(ArrayList<WeekListItem> weeks) {
-    this.weeks = weeks;
-  }
+    public void setWeeks(ArrayList<WeekListItem> weeks) {
+        this.weeks = weeks;
+    }
 
-  public boolean addWeek(WeekListItem item) {
-    return weeks.add(item);
-  }
+    public boolean addWeek(WeekListItem item) {
+        return weeks.add(item);
+    }
 
-  public boolean removeWeek(WeekListItem item) {
-    return weeks.remove(item);
-  }
+    public boolean removeWeek(WeekListItem item) {
+        return weeks.remove(item);
+    }
 
-  public WeekListItem removeWeek(int index) {
-    return weeks.remove(index);
-  }
+    public WeekListItem removeWeek(int index) {
+        return weeks.remove(index);
+    }
 
 }
diff --git a/Basket/src/main/java/main/basket/list/structure/WeekListItem.java b/Basket/src/main/java/main/basket/list/structure/WeekListItem.java
index d0d5c73..0da7e27 100644
--- a/Basket/src/main/java/main/basket/list/structure/WeekListItem.java
+++ b/Basket/src/main/java/main/basket/list/structure/WeekListItem.java
@@ -4,43 +4,45 @@ import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.Date;
 
-/** Created by martin on 28.7.13. */
+/**
+ * Created by martin on 28.7.13.
+ */
 public class WeekListItem extends CommonListItem implements Serializable {
 
-  protected ArrayList<ShopListItem> shops;
+    protected ArrayList<ShopListItem> shops;
 
-  public WeekListItem(String headLine, Date dateFrom) {
-    this(headLine, null, dateFrom);
-  }
+    public WeekListItem(String headLine, Date dateFrom) {
+        this(headLine, null, dateFrom);
+    }
 
-  public WeekListItem(String headLine, ArrayList<ShopListItem> shops, Date dateFrom) {
-    super(headLine, dateFrom);
-    this.shops = (shops != null) ? shops : new ArrayList<ShopListItem>();
-  }
+    public WeekListItem(String headLine, ArrayList<ShopListItem> shops, Date dateFrom) {
+        super(headLine, dateFrom);
+        this.shops = (shops != null) ? shops : new ArrayList<ShopListItem>();
+    }
 
-  public ArrayList<ShopListItem> getShops() {
-    return shops;
-  }
+    public ArrayList<ShopListItem> getShops() {
+        return shops;
+    }
 
-  public void setShops(ArrayList<ShopListItem> shops) {
-    this.shops = shops;
-  }
+    public void setShops(ArrayList<ShopListItem> shops) {
+        this.shops = shops;
+    }
 
-  public boolean addShop(ShopListItem item) {
-    return shops.add(item);
-  }
+    public boolean addShop(ShopListItem item) {
+        return shops.add(item);
+    }
 
-  public boolean removeShop(ShopListItem item) {
-    return shops.remove(item);
-  }
+    public boolean removeShop(ShopListItem item) {
+        return shops.remove(item);
+    }
 
-  public ShopListItem removeShop(int index) {
-    return shops.remove(index);
-  }
+    public ShopListItem removeShop(int index) {
+        return shops.remove(index);
+    }
 
-  @Override
-  public int getSubItemCount() {
-    return (shops != null) ? shops.size() : 0;
-  }
+    @Override
+    public int getSubItemCount() {
+        return (shops != null) ? shops.size() : 0;
+    }
 
 }
diff --git a/Basket/src/main/java/main/basket/tools/Connection.java b/Basket/src/main/java/main/basket/tools/Connection.java
index 973d774..307e678 100644
--- a/Basket/src/main/java/main/basket/tools/Connection.java
+++ b/Basket/src/main/java/main/basket/tools/Connection.java
@@ -10,143 +10,144 @@ import java.net.HttpURLConnection;
 import java.net.URL;
 import java.net.URLConnection;
 
-/** Created by martin on 5.8.13. */
+/**
+ * Created by martin on 5.8.13.
+ */
 public class Connection {
 
-  private static Connection instance;
-  private int responseCode;
-  private String responseStr;
+    private static Connection instance;
+    private int responseCode;
+    private String responseStr;
 
-  public static final String URL_SERVER        = "http://www.stud.fit.vutbr.cz/~xbrazd14/";
-  public static final String URL_UPLOADER      = URL_SERVER + "uploader.php";
-  public static final String URL_DOWNLOAD_FILE = URL_SERVER + "resources/basket.json";
-  public static final String CRLF        = "\r\n";
-  public static final String TWO_HYPHNES = "--";
-  public static final String BOUNDARY    = "*****";
-  public static final int BUFFER_SIZE    = 1024;
+    public static final String URL_SERVER = "http://www.stud.fit.vutbr.cz/~xbrazd14/";
+    public static final String URL_UPLOADER = URL_SERVER + "uploader.php";
+    public static final String URL_DOWNLOAD_FILE = URL_SERVER + "resources/basket.json";
+    public static final String CRLF = "\r\n";
+    public static final String TWO_HYPHNES = "--";
+    public static final String BOUNDARY = "*****";
+    public static final int BUFFER_SIZE = 1024;
 
-  private Connection() {
-  }
+    private Connection() {
+    }
+
+    public static Connection getInstance() {
+        if (instance == null) {
+            instance = new Connection();
+        }
+        return instance;
+    }
 
-  public static Connection getInstance() {
-    if (instance == null) {
-      instance = new Connection();
+    public int getResponseCode() {
+        return responseCode;
     }
-    return instance;
-  }
-
-  public int getResponseCode() {
-    return responseCode;
-  }
-
-  public String getResponseStr() {
-    return responseStr;
-  }
-
-  public boolean receiveFile(String filePath, FileConnectionTask progress) {
-    URLConnection connection            = null;
-    FileOutputStream fileOutputStream   = null;
-    BufferedInputStream inputStream     = null;
-    byte[] buffer;
-
-    try {
-      URL url = new URL(URL_DOWNLOAD_FILE);
-      connection = url.openConnection();
-      connection.connect();
-        // Prepare download the file
-      inputStream      = new BufferedInputStream(url.openStream());
-      fileOutputStream = new FileOutputStream(filePath);
-      buffer = new byte[BUFFER_SIZE];
-      int fileLength   = connection.getContentLength();
-        // Downloading the file
-      int total = 0;
-      int count;
-      progress.setProgress(0);
-      progress.setMax(fileLength/1024);
-      progress.setUnit("KiB");
-      while ((count = inputStream.read(buffer)) != -1) {
-        fileOutputStream.write(buffer, 0, count);
-        total += count;
-        progress.setProgress(total/1024);
-      }
-        // close all streams
-      fileOutputStream.flush();
-      fileOutputStream.close();
-      inputStream.close();
-        // result codes
-      responseCode = 0;
-      responseStr  = "Succesfully downloaded...";
-      return true;
-    } catch (IOException e) {
-      responseCode = -1;
-      responseStr  = e.getLocalizedMessage();
+
+    public String getResponseStr() {
+        return responseStr;
     }
-    return false;
-  }
-
-  public boolean sendFile(String filePath, FileConnectionTask progress) {
-    HttpURLConnection connection    = null;
-    DataOutputStream outputStream   = null;
-    FileInputStream fileInputStream = null;
-    int bytesRead, bytesAvailable, bufferSize;
-    byte[] buffer;
-
-    try {
-      fileInputStream = new FileInputStream(new File(filePath));
-
-      URL url = new URL(URL_UPLOADER);
-      connection = (HttpURLConnection) url.openConnection();
-        // Allow Inputs & Outputs
-      connection.setDoInput(true);
-      connection.setDoOutput(true);
-      connection.setUseCaches(false);
-        // Enable POST method
-      connection.setRequestMethod("POST");
-      connection.setRequestProperty("Connection", "Keep-Alive");
-      connection.setRequestProperty("Content-Type", "multipart/form-data;boundary=" + BOUNDARY);
-        // Prepare stream to file upload
-      outputStream = new DataOutputStream( connection.getOutputStream() );
-      outputStream.writeBytes(TWO_HYPHNES + BOUNDARY + CRLF);
-      outputStream.writeBytes("Content-Disposition: form-data; name=\"uploadedfile\";filename=\"" + filePath +"\"" + CRLF);
-      outputStream.writeBytes(CRLF);
-        // Prepare send file
-      bytesAvailable = fileInputStream.available();
-      bufferSize = Math.min(bytesAvailable, BUFFER_SIZE);
-      buffer = new byte[bufferSize];
-      int total = 0;
-      int fileLength = bytesAvailable;
-      bytesRead = fileInputStream.read(buffer, 0, bufferSize);
-        // Sending file cycle
-      progress.setProgress(0);
-      progress.setMax(fileLength/1024);
-      progress.setUnit("KiB");
-      while (bytesRead > 0) {
-        outputStream.write(buffer, 0, bufferSize);
-
-        total += bytesRead;
-        progress.setProgress(total/1024);
-
-        bytesAvailable = fileInputStream.available();
-        bufferSize = Math.min(bytesAvailable, BUFFER_SIZE);
-        bytesRead = fileInputStream.read(buffer, 0, bufferSize);
-      }
-
-      outputStream.writeBytes(CRLF);
-      outputStream.writeBytes(TWO_HYPHNES + BOUNDARY + TWO_HYPHNES + CRLF);
-        // Responses from the server (code and message)
-      responseCode = connection.getResponseCode();
-      responseStr  = connection.getResponseMessage();
-        // close all streams
-      fileInputStream.close();
-      outputStream.flush();
-      outputStream.close();
-      return true;
+
+    public boolean receiveFile(String filePath, FileConnectionTask progress) {
+        URLConnection connection = null;
+        FileOutputStream fileOutputStream = null;
+        BufferedInputStream inputStream = null;
+        byte[] buffer;
+
+        try {
+            URL url = new URL(URL_DOWNLOAD_FILE);
+            connection = url.openConnection();
+            connection.connect();
+            // Prepare download the file
+            inputStream = new BufferedInputStream(url.openStream());
+            fileOutputStream = new FileOutputStream(filePath);
+            buffer = new byte[BUFFER_SIZE];
+            int fileLength = connection.getContentLength();
+            // Downloading the file
+            int total = 0;
+            int count;
+            progress.setProgress(0);
+            progress.setMax(fileLength / 1024);
+            progress.setUnit("KiB");
+            while ((count = inputStream.read(buffer)) != -1) {
+                fileOutputStream.write(buffer, 0, count);
+                total += count;
+                progress.setProgress(total / 1024);
+            }
+            // close all streams
+            fileOutputStream.flush();
+            fileOutputStream.close();
+            inputStream.close();
+            // result codes
+            responseCode = 0;
+            responseStr = "Succesfully downloaded...";
+            return true;
+        } catch (IOException e) {
+            responseCode = -1;
+            responseStr = e.getLocalizedMessage();
+        }
+        return false;
     }
-    catch (IOException e) { //Exception handling
-      responseCode = -1;
-      responseStr  = e.getLocalizedMessage();
+
+    public boolean sendFile(String filePath, FileConnectionTask progress) {
+        HttpURLConnection connection = null;
+        DataOutputStream outputStream = null;
+        FileInputStream fileInputStream = null;
+        int bytesRead, bytesAvailable, bufferSize;
+        byte[] buffer;
+
+        try {
+            fileInputStream = new FileInputStream(new File(filePath));
+
+            URL url = new URL(URL_UPLOADER);
+            connection = (HttpURLConnection) url.openConnection();
+            // Allow Inputs & Outputs
+            connection.setDoInput(true);
+            connection.setDoOutput(true);
+            connection.setUseCaches(false);
+            // Enable POST method
+            connection.setRequestMethod("POST");
+            connection.setRequestProperty("Connection", "Keep-Alive");
+            connection.setRequestProperty("Content-Type", "multipart/form-data;boundary=" + BOUNDARY);
+            // Prepare stream to file upload
+            outputStream = new DataOutputStream(connection.getOutputStream());
+            outputStream.writeBytes(TWO_HYPHNES + BOUNDARY + CRLF);
+            outputStream.writeBytes("Content-Disposition: form-data; name=\"uploadedfile\";filename=\"" + filePath + "\"" + CRLF);
+            outputStream.writeBytes(CRLF);
+            // Prepare send file
+            bytesAvailable = fileInputStream.available();
+            bufferSize = Math.min(bytesAvailable, BUFFER_SIZE);
+            buffer = new byte[bufferSize];
+            int total = 0;
+            int fileLength = bytesAvailable;
+            bytesRead = fileInputStream.read(buffer, 0, bufferSize);
+            // Sending file cycle
+            progress.setProgress(0);
+            progress.setMax(fileLength / 1024);
+            progress.setUnit("KiB");
+            while (bytesRead > 0) {
+                outputStream.write(buffer, 0, bufferSize);
+
+                total += bytesRead;
+                progress.setProgress(total / 1024);
+
+                bytesAvailable = fileInputStream.available();
+                bufferSize = Math.min(bytesAvailable, BUFFER_SIZE);
+                bytesRead = fileInputStream.read(buffer, 0, bufferSize);
+            }
+
+            outputStream.writeBytes(CRLF);
+            outputStream.writeBytes(TWO_HYPHNES + BOUNDARY + TWO_HYPHNES + CRLF);
+            // Responses from the server (code and message)
+            responseCode = connection.getResponseCode();
+            responseStr = connection.getResponseMessage();
+            // close all streams
+            fileInputStream.close();
+            outputStream.flush();
+            outputStream.close();
+            return true;
+        } catch (IOException e) { //Exception handling
+            responseCode = -1;
+            responseStr = e.getLocalizedMessage();
+        }
+        return false;
     }
-    return false;
-  }
 
 }
diff --git a/Basket/src/main/java/main/basket/tools/FileConnectionTask.java b/Basket/src/main/java/main/basket/tools/FileConnectionTask.java
index dad4689..a5d8090 100644
--- a/Basket/src/main/java/main/basket/tools/FileConnectionTask.java
+++ b/Basket/src/main/java/main/basket/tools/FileConnectionTask.java
@@ -11,219 +11,220 @@ import android.widget.ProgressBar;
 
 import java.text.NumberFormat;
 
+import main.basket.R;
 import main.basket.WeekActivity;
 import main.basket.helper.MainHelper;
 import main.basket.list.structure.StructureWrapper;
-import main.basket.R;
 
-/** Created by martin on 7.8.13. */
+/**
+ * Created by martin on 7.8.13.
+ */
 public class FileConnectionTask extends AsyncTask<String, Integer, Object> {
 
-  private ProgressDialog dialog;
-  private Activity srcActivity;
-  private boolean upload;
-  private boolean save;
-  private String message;
-  private boolean connectionPart;
-  private StructureWrapper deserializedObj = null;
-  private int retValue = -1;  // 0 means ok, everything else is failure
-
-  public FileConnectionTask(Activity activity, boolean upload, boolean save) {
-    srcActivity = activity;
-    this.upload = upload;
-    this.save = save;
-    message = "...";
-  }
-
-  @Override
-  protected void onPreExecute() {
-    dialog = new ProgressDialog(srcActivity);
-    Drawable mDrawable = srcActivity.getResources().getDrawable(android.R.drawable.ic_popup_sync);
-  //  TextView tv = (TextView) dialog.findViewById(android.R.id.title);
-    // color = CurrentColor - (WhiteColor+1)
-    // color = 16711680-(17677215+1)  => color < 0 !!
-    // CurentColor = color + (WhiteColor+1)
-  //  int color = tv.getCurrentTextColor() + (17677215 + 1);
-    mDrawable.setColorFilter(Color.DKGRAY, PorterDuff.Mode.MULTIPLY);
-
-    dialog.setIcon(mDrawable);
-    dialog.setTitle(srcActivity.getString(R.string.sync));
-    dialog.setMessage(message);
-    dialog.setIndeterminate(false);
-    dialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
-    dialog.setProgress(0);
-    dialog.setCancelable(false);
-    dialog.show();
-  }
-
-  @Override
-  protected Object doInBackground(String... params) {
-    retValue = -1;
-    try {
-      boolean res = false;
-      if (upload) {
-        connectionPart = false;
-        message = srcActivity.getString(R.string.serializing);
-       srcActivity.runOnUiThread(new ChangeMsgAndStyle(message, ProgressDialog.STYLE_SPINNER));
-        res = Serializer.getInstance().serializeToJson(params[0], WeekActivity.weeks, StructureWrapper.class);
-        if (!save && res) {
-          connectionPart = true;
-          message = srcActivity.getString(R.string.uploading);
-          srcActivity.runOnUiThread(new ChangeMsgAndStyle(message, ProgressDialog.STYLE_HORIZONTAL));
-          res = Connection.getInstance().sendFile(params[0], this);
-        }
-      } else {
-        if (!save) {
-          connectionPart = true;
-          message = srcActivity.getString(R.string.downloading);
-          srcActivity.runOnUiThread(new ChangeMsgAndStyle(message, ProgressDialog.STYLE_HORIZONTAL));
-          res = Connection.getInstance().receiveFile(params[0], this);
-        } else {
-          res = true;
-        }
-        if (res) {
-          connectionPart = false;
-          message = srcActivity.getString(R.string.deserializing);
-          srcActivity.runOnUiThread(new ChangeMsgAndStyle(message, ProgressDialog.STYLE_SPINNER));
-          deserializedObj = (StructureWrapper) Serializer.getInstance().deserializeFromJson(params[0],
-                                 StructureWrapper.class);
-          res = (deserializedObj != null);
-        }
-      }
-      return res;
-    } catch (Exception e) {
-      return e;
+    private ProgressDialog dialog;
+    private Activity srcActivity;
+    private boolean upload;
+    private boolean save;
+    private String message;
+    private boolean connectionPart;
+    private StructureWrapper deserializedObj = null;
+    private int retValue = -1;  // 0 means ok, everything else is failure
+
+    public FileConnectionTask(Activity activity, boolean upload, boolean save) {
+        srcActivity = activity;
+        this.upload = upload;
+        this.save = save;
+        message = "...";
     }
-  }
-
-  public void setProgress(final Integer... values) {
-    publishProgress(values);
-  }
-
-  public void setMax(final int max) {
-    srcActivity.runOnUiThread(new Runnable() {
-      @Override
-      public void run() {
-        dialog.setMax(max);
-      }
-    });
-  }
-
-  public void setUnit(final String unit) {
-    srcActivity.runOnUiThread(new Runnable() {
-      @Override
-      public void run() {
-        if (Build.VERSION.SDK_INT >= 11) {
-          dialog.setProgressNumberFormat("%1d/%2d " + unit);
-        } else {
-          dialog.setMessage(message + " (" + srcActivity.getString(R.string.in) + " " + unit + ")");
-        }
-      }
-    });
-  }
-
-  @Override
-  protected void onProgressUpdate(final Integer... progress) {
-    srcActivity.runOnUiThread(new Runnable() {
-      @Override
-      public void run() {
-        dialog.setProgress(progress[0]);
-      }
-    });
-  }
-
-  @Override
-  protected void onPostExecute(Object result) {
-    if (dialog.isShowing()) {
-      dialog.dismiss();
+
+    @Override
+    protected void onPreExecute() {
+        dialog = new ProgressDialog(srcActivity);
+        Drawable mDrawable = srcActivity.getResources().getDrawable(android.R.drawable.ic_popup_sync);
+        //  TextView tv = (TextView) dialog.findViewById(android.R.id.title);
+        // color = CurrentColor - (WhiteColor+1)
+        // color = 16711680-(17677215+1)  => color < 0 !!
+        // CurentColor = color + (WhiteColor+1)
+        //  int color = tv.getCurrentTextColor() + (17677215 + 1);
+        mDrawable.setColorFilter(Color.DKGRAY, PorterDuff.Mode.MULTIPLY);
+
+        dialog.setIcon(mDrawable);
+        dialog.setTitle(srcActivity.getString(R.string.sync));
+        dialog.setMessage(message);
+        dialog.setIndeterminate(false);
+        dialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
+        dialog.setProgress(0);
+        dialog.setCancelable(false);
+        dialog.show();
     }
 
-    String msg = "";
-    String msgFirst = "";
-    retValue = -1;
-    if (result instanceof Exception) {
-      msg = ((Exception) result).getLocalizedMessage();
-    } else if (result instanceof Boolean) {
-      Connection con = Connection.getInstance();
-      Serializer ser = Serializer.getInstance();
-      if (save) {
-        if (upload) {
-          msg = ((Boolean)result) ? srcActivity.getString(R.string.save_ok) : ser.getErrString();
-        } else {
-          msg = ((Boolean)result) ? srcActivity.getString(R.string.load_ok) : ser.getErrString();
-        }
-        retValue   = ((Boolean)result) ? 0 : -1;
-      } else if (connectionPart) {
-        msg        = con.getResponseStr();
-        retValue   = con.getResponseCode();
-        if ((Boolean)result) {
-          retValue = 0;
-          if (upload == false) { // download
-            msg = srcActivity.getString(R.string.down_ok);
-          } else if (con.getResponseCode() == 200) { // upload
-            msg = srcActivity.getString(R.string.sync_ok);
-          } else { // error in upload
-            msgFirst = srcActivity.getString(R.string.save_ok);
-            retValue = con.getResponseCode();
-            retValue = (retValue == 0) ? -1 : retValue;
-          }
-        } else { // error (exception catch)
-          if (upload) {
-            msgFirst = srcActivity.getString(R.string.save_ok);
-          }
-          retValue = (retValue == 0) ? -1 : retValue;
+    @Override
+    protected Object doInBackground(String... params) {
+        retValue = -1;
+        try {
+            boolean res = false;
+            if (upload) {
+                connectionPart = false;
+                message = srcActivity.getString(R.string.serializing);
+                srcActivity.runOnUiThread(new ChangeMsgAndStyle(message, ProgressDialog.STYLE_SPINNER));
+                res = Serializer.getInstance().serializeToJson(params[0], WeekActivity.weeks, StructureWrapper.class);
+                if (!save && res) {
+                    connectionPart = true;
+                    message = srcActivity.getString(R.string.uploading);
+                    srcActivity.runOnUiThread(new ChangeMsgAndStyle(message, ProgressDialog.STYLE_HORIZONTAL));
+                    res = Connection.getInstance().sendFile(params[0], this);
+                }
+            } else {
+                if (!save) {
+                    connectionPart = true;
+                    message = srcActivity.getString(R.string.downloading);
+                    srcActivity.runOnUiThread(new ChangeMsgAndStyle(message, ProgressDialog.STYLE_HORIZONTAL));
+                    res = Connection.getInstance().receiveFile(params[0], this);
+                } else {
+                    res = true;
+                }
+                if (res) {
+                    connectionPart = false;
+                    message = srcActivity.getString(R.string.deserializing);
+                    srcActivity.runOnUiThread(new ChangeMsgAndStyle(message, ProgressDialog.STYLE_SPINNER));
+                    deserializedObj = (StructureWrapper) Serializer.getInstance().deserializeFromJson(params[0],
+                            StructureWrapper.class);
+                    res = (deserializedObj != null);
+                }
+            }
+            return res;
+        } catch (Exception e) {
+            return e;
         }
-      } else {
-        msg        = ((Boolean)result) ? srcActivity.getString(R.string.sync_ok) : ser.getErrString();
-        retValue   = ((Boolean)result) ? 0 : -1;
-      }
-
-      if ((upload == false) && (retValue == 0) && (srcActivity instanceof WeekActivity)) {
-        ((WeekActivity) srcActivity).setWeeks(deserializedObj);
-      }
-    } else {
-      msg = srcActivity.getString(R.string.err_unknown_result);
     }
-    MainHelper.showCustomToast(srcActivity, msgFirst, msg, (retValue == 0));
-  }
-
-  public int getResultValue() {
-    return retValue;
-  }
-
 
+    public void setProgress(final Integer... values) {
+        publishProgress(values);
+    }
 
-  private class ChangeMsgAndStyle implements Runnable {
+    public void setMax(final int max) {
+        srcActivity.runOnUiThread(new Runnable() {
+            @Override
+            public void run() {
+                dialog.setMax(max);
+            }
+        });
+    }
 
-    private String message = "";
-    private int style;
+    public void setUnit(final String unit) {
+        srcActivity.runOnUiThread(new Runnable() {
+            @Override
+            public void run() {
+                if (Build.VERSION.SDK_INT >= 11) {
+                    dialog.setProgressNumberFormat("%1d/%2d " + unit);
+                } else {
+                    dialog.setMessage(message + " (" + srcActivity.getString(R.string.in) + " " + unit + ")");
+                }
+            }
+        });
+    }
 
-    private ChangeMsgAndStyle(String message, int style) {
-      this.message = message;
-      this.style = style;
+    @Override
+    protected void onProgressUpdate(final Integer... progress) {
+        srcActivity.runOnUiThread(new Runnable() {
+            @Override
+            public void run() {
+                dialog.setProgress(progress[0]);
+            }
+        });
     }
 
     @Override
-    public void run() {
-      dialog.setMessage(message);
-      ProgressBar bar = (ProgressBar) dialog.findViewById(android.R.id.progress);
-      if (bar != null) {
-        if (style == ProgressDialog.STYLE_SPINNER) {
-          bar.setIndeterminate(true);
-          if (Build.VERSION.SDK_INT >= 11) {
-            dialog.setProgressNumberFormat(null);
-            dialog.setProgressPercentFormat(null);
-          }
+    protected void onPostExecute(Object result) {
+        if (dialog.isShowing()) {
+            dialog.dismiss();
+        }
+
+        String msg = "";
+        String msgFirst = "";
+        retValue = -1;
+        if (result instanceof Exception) {
+            msg = ((Exception) result).getLocalizedMessage();
+        } else if (result instanceof Boolean) {
+            Connection con = Connection.getInstance();
+            Serializer ser = Serializer.getInstance();
+            if (save) {
+                if (upload) {
+                    msg = ((Boolean) result) ? srcActivity.getString(R.string.save_ok) : ser.getErrString();
+                } else {
+                    msg = ((Boolean) result) ? srcActivity.getString(R.string.load_ok) : ser.getErrString();
+                }
+                retValue = ((Boolean) result) ? 0 : -1;
+            } else if (connectionPart) {
+                msg = con.getResponseStr();
+                retValue = con.getResponseCode();
+                if ((Boolean) result) {
+                    retValue = 0;
+                    if (upload == false) { // download
+                        msg = srcActivity.getString(R.string.down_ok);
+                    } else if (con.getResponseCode() == 200) { // upload
+                        msg = srcActivity.getString(R.string.sync_ok);
+                    } else { // error in upload
+                        msgFirst = srcActivity.getString(R.string.save_ok);
+                        retValue = con.getResponseCode();
+                        retValue = (retValue == 0) ? -1 : retValue;
+                    }
+                } else { // error (exception catch)
+                    if (upload) {
+                        msgFirst = srcActivity.getString(R.string.save_ok);
+                    }
+                    retValue = (retValue == 0) ? -1 : retValue;
+                }
+            } else {
+                msg = ((Boolean) result) ? srcActivity.getString(R.string.sync_ok) : ser.getErrString();
+                retValue = ((Boolean) result) ? 0 : -1;
+            }
+
+            if ((upload == false) && (retValue == 0) && (srcActivity instanceof WeekActivity)) {
+                ((WeekActivity) srcActivity).setWeeks(deserializedObj);
+            }
         } else {
-          bar.setIndeterminate(false);
-          if (Build.VERSION.SDK_INT >= 11) {
-            dialog.setProgressNumberFormat("%1d/%2d");
-            NumberFormat nf = NumberFormat.getPercentInstance();
-            nf.setMaximumFractionDigits(0);
-            dialog.setProgressPercentFormat(nf);
-          }
+            msg = srcActivity.getString(R.string.err_unknown_result);
+        }
+        MainHelper.showCustomToast(srcActivity, msgFirst, msg, (retValue == 0));
+    }
+
+    public int getResultValue() {
+        return retValue;
+    }
+
+
+    private class ChangeMsgAndStyle implements Runnable {
+
+        private String message = "";
+        private int style;
+
+        private ChangeMsgAndStyle(String message, int style) {
+            this.message = message;
+            this.style = style;
+        }
+
+        @Override
+        public void run() {
+            dialog.setMessage(message);
+            ProgressBar bar = (ProgressBar) dialog.findViewById(android.R.id.progress);
+            if (bar != null) {
+                if (style == ProgressDialog.STYLE_SPINNER) {
+                    bar.setIndeterminate(true);
+                    if (Build.VERSION.SDK_INT >= 11) {
+                        dialog.setProgressNumberFormat(null);
+                        dialog.setProgressPercentFormat(null);
+                    }
+                } else {
+                    bar.setIndeterminate(false);
+                    if (Build.VERSION.SDK_INT >= 11) {
+                        dialog.setProgressNumberFormat("%1d/%2d");
+                        NumberFormat nf = NumberFormat.getPercentInstance();
+                        nf.setMaximumFractionDigits(0);
+                        dialog.setProgressPercentFormat(nf);
+                    }
+                }
+            }
         }
-      }
     }
-  }
 }
\ No newline at end of file
diff --git a/Basket/src/main/java/main/basket/tools/Serializer.java b/Basket/src/main/java/main/basket/tools/Serializer.java
index d5df82e..3cfb1ee 100644
--- a/Basket/src/main/java/main/basket/tools/Serializer.java
+++ b/Basket/src/main/java/main/basket/tools/Serializer.java
@@ -2,62 +2,62 @@ package main.basket.tools;
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import com.google.gson.JsonIOException;
-import com.google.gson.JsonSyntaxException;
-import com.google.gson.stream.JsonWriter;
 import com.google.gson.stream.JsonReader;
+import com.google.gson.stream.JsonWriter;
 
-import java.io.FileNotFoundException;
 import java.io.FileOutputStream;
-import java.io.FileReader;
-import java.io.IOException;
+import java.io.FileInputStream;
 import java.io.OutputStreamWriter;
+import java.io.InputStreamReader;
 
-/** Created by martin on 6.8.13. */
+/**
+ * Created by martin on 6.8.13.
+ */
 public class Serializer {
 
-  private static Serializer instance;
-  protected String errString = "";
+    private static Serializer instance;
+    protected String errString = "";
 
-  private Serializer() {
-  }
+    private Serializer() {
+    }
 
-  public static Serializer getInstance() {
-    if (instance == null) {
-      instance = new Serializer();
+    public static Serializer getInstance() {
+        if (instance == null) {
+            instance = new Serializer();
+        }
+        return instance;
     }
-    return instance;
-  }
-
-  public String getErrString() {
-    return errString;
-  }
-
-  public boolean serializeToJson(String filePath, Object obj, Class clazz) {
-    JsonWriter writer = null;
-    try {
-      FileOutputStream stream = new FileOutputStream(filePath);
-      writer = new JsonWriter(new OutputStreamWriter(stream, "UTF-8"));
-      writer.setIndent("  ");
-      Gson gson = new GsonBuilder().setPrettyPrinting().create();
-      gson.toJson(obj, clazz, writer);
-      writer.close();
-      return true;
-    } catch (JsonIOException | IOException e) {
-      errString = e.getLocalizedMessage();
+
+    public String getErrString() {
+        return errString;
     }
-    return false;
-  }
-
-  public Object deserializeFromJson(String filePath, Class clazz) {
-    JsonReader reader = null;
-    try {
-      reader = new JsonReader(new FileReader(filePath));
-      return new Gson().fromJson(reader, clazz);
-    } catch (JsonSyntaxException | JsonIOException | FileNotFoundException e) {
-      errString = e.getLocalizedMessage();
+
+    public boolean serializeToJson(String filePath, Object obj, Class clazz) {
+        JsonWriter writer = null;
+        try {
+            FileOutputStream stream = new FileOutputStream(filePath);
+            writer = new JsonWriter(new OutputStreamWriter(stream, "UTF-8"));
+            writer.setIndent("  ");
+            Gson gson = new GsonBuilder().setPrettyPrinting().create();
+            gson.toJson(obj, clazz, writer);
+            writer.close();
+            return true;
+        } catch (Exception e) {
+            errString = e.getLocalizedMessage();
+        }
+        return false;
+    }
+
+    public Object deserializeFromJson(String filePath, Class clazz) {
+        JsonReader reader = null;
+        try {
+//          reader = new JsonReader(new FileReader(filePath));
+            reader = new JsonReader(new InputStreamReader(new FileInputStream(filePath), "UTF-8"));
+            return new Gson().fromJson(reader, clazz);
+        } catch (Exception e) {
+            errString = e.getLocalizedMessage();
+        }
+        return null;
     }
-    return null;
-  }
 
 }
diff --git a/Basket/src/main/res/drawable-hdpi/other.png b/Basket/src/main/res/drawable-hdpi/other.png
new file mode 100644
index 0000000..380518d
Binary files /dev/null and b/Basket/src/main/res/drawable-hdpi/other.png differ
diff --git a/Basket/src/main/res/drawable-mdpi/other.png b/Basket/src/main/res/drawable-mdpi/other.png
new file mode 100644
index 0000000..b36fb41
Binary files /dev/null and b/Basket/src/main/res/drawable-mdpi/other.png differ
diff --git a/Basket/src/main/res/drawable-xhdpi/other.png b/Basket/src/main/res/drawable-xhdpi/other.png
new file mode 100644
index 0000000..045a065
Binary files /dev/null and b/Basket/src/main/res/drawable-xhdpi/other.png differ
diff --git a/Basket/src/main/res/drawable-xxhdpi/other.png b/Basket/src/main/res/drawable-xxhdpi/other.png
new file mode 100644
index 0000000..0a50e80
Binary files /dev/null and b/Basket/src/main/res/drawable-xxhdpi/other.png differ
diff --git a/Basket/src/main/res/values-cs/strings.xml b/Basket/src/main/res/values-cs/strings.xml
index 6a12ba6..819c278 100644
--- a/Basket/src/main/res/values-cs/strings.xml
+++ b/Basket/src/main/res/values-cs/strings.xml
@@ -39,5 +39,6 @@
     <string name="price_unit_all">,- Kč</string>
     <string name="product">Výrobek</string>
     <string name="price">Cena:</string>
+    <string name="other_shop">Ostatní</string>
 
 </resources>
diff --git a/Basket/src/main/res/values/strings.xml b/Basket/src/main/res/values/strings.xml
index 53773d9..23280ec 100644
--- a/Basket/src/main/res/values/strings.xml
+++ b/Basket/src/main/res/values/strings.xml
@@ -39,5 +39,6 @@
     <string name="price_unit_all">,- €</string>
     <string name="product">Product</string>
     <string name="price">Price:</string>
+    <string name="other_shop">Other</string>
 
 </resources>
-- 
2.8.4 (Apple Git-73)

