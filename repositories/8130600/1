From d3b1758539973603130b9e17ddb3e1502ee3c306 Mon Sep 17 00:00:00 2001
From: colin725 <colin725@gmail.com>
Date: Tue, 11 Feb 2014 00:52:08 -0800
Subject: [PATCH] initial back button support


21	1	src/com/fsck/sector25/Menu.java
16	12	src/com/fsck/sector25/sector25activity.java
0	0	src/com/fsck/sector25/sector25view.java

diff --git a/src/com/fsck/sector25/Menu.java b/src/com/fsck/sector25/Menu.java
index 13fa78f..8d92bcc 100644
--- a/src/com/fsck/sector25/Menu.java
+++ b/src/com/fsck/sector25/Menu.java
@@ -30,7 +30,7 @@ public class Menu {
     private Point mButton1;
     private Point mButton2;
     private int mSelected;
-    private int mPopup;
+    private static int mPopup;
     private int mMapPosition;
     private static Healthbar mHealth;
     private static Energybar mEnergy;
@@ -417,6 +417,7 @@ public class Menu {
                             /*
                              *  Play button.  This starts a new game so reset anything
                              *  which remains between levels (health).
+                             *  TODO: Move this code, this should just be switching menus
                              */
                             mPage = MenuPage.LEVELSELECT;
                             mHealth.reset();
@@ -523,6 +524,25 @@ public class Menu {
         return mPage;
     }
 
+    /***
+     * Returns to the former page when the back button is pressed.
+     * @return whether we were already on the main menu (so exit app)
+     */
+    public static boolean backPage() {
+        if (mPage != MenuPage.MAINMENU) {
+            if (mPopup != 0) {
+                mPopup = 0;
+            } else {
+                mPage = MenuPage.MAINMENU;
+                // TODO: place holder, we should know which way to go.
+                mAnimationTarget = AnimationTarget.LEFT;
+            }
+            return false;
+        } else {
+            return true;
+        }
+    }
+
     public static void update() {
         if (mAnimationTarget != AnimationTarget.DONE) {
             switch (mAnimationTarget) {
diff --git a/src/com/fsck/sector25/sector25activity.java b/src/com/fsck/sector25/sector25activity.java
index f566182..a9ed5a1 100644
--- a/src/com/fsck/sector25/sector25activity.java
+++ b/src/com/fsck/sector25/sector25activity.java
@@ -1,5 +1,6 @@
 package com.fsck.sector25;
 
+import com.fsck.sector25.sector25view.GameState;
 import android.app.Activity;
 import android.content.pm.ActivityInfo;
 import android.os.Bundle;
@@ -10,7 +11,7 @@ import android.os.Bundle;
 public class sector25activity extends Activity {
 
     /** The view which draws the game */
-    private sector25view sector25view;
+    private sector25view s25view;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -19,34 +20,37 @@ public class sector25activity extends Activity {
         setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
         setContentView(R.layout.s25);
 
-        sector25view = (sector25view) findViewById(R.id.s25);
+        s25view = (sector25view) findViewById(R.id.s25);
         if (savedInstanceState != null) {
-            sector25view.getThread().restoreState(savedInstanceState);
+            s25view.getThread().restoreState(savedInstanceState);
         }
     }
 
-    /**
-     * Invoked when the Activity loses user focus.
-     */
+    @Override
+    public void onBackPressed() {
+        boolean exit = Menu.backPage();
+        if (exit) {
+            super.onBackPressed();
+        }
+        s25view.getThread().setState(GameState.STATE_MENU);
+    }
+
     @Override
     protected void onPause() {
         super.onPause();
-        sector25view.getThread().pause();
+        s25view.getThread().pause();
     }
 
-    /**
-     * Invoked when the Activity loses user focus.
-     */
     @Override
     protected void onResume() {
         super.onResume();
-        sector25view.getThread().unpause();
+        s25view.getThread().unpause();
     }
 
     @Override
     protected void onSaveInstanceState(Bundle outState) {
         super.onSaveInstanceState(outState);
-        sector25view.getThread().saveState(outState);
+        s25view.getThread().saveState(outState);
     }
 
 }
\ No newline at end of file
-- 
2.8.4 (Apple Git-73)

